language: cpp

sudo: required

services:
- docker

env:
  matrix:
    - DISTRO=gentoo DOCKERHUB=true
    - DISTRO=gentoo COVERAGE=ON

matrix:
  allow_failures:
    - compiler: clang #takes too long
      env: DISTRO=gentoo COVERAGE=ON 

script:
  - rm -rf tpl
  - cp -vr docker ${HOME}/docker
  - sed -i "1s/gentoo/${DISTRO}/" ${HOME}/docker/Dockerfile.quinoa-build-travis
  - cd ../../
  - mv -v ${TRAVIS_REPO_SLUG} $HOME/docker
  - cp -r $HOME/.ccache ${HOME}/docker/ccache
  - if [[ ${CC} != gcc ]]; then TAG="_${CC}"; fi
  - docker build --build-arg CXXFLAGS=${WERROR:+-Werror}
                --build-arg COVERAGE=${COVERAGE}
                --build-arg CC=${CC} --build-arg CXX=${CXX}
                --build-arg TRAVIS_BRANCH=${TRAVIS_BRANCH} --build-arg TRAVIS_JOB_NUMBER=${TRAVIS_JOB_NUMBER}
                --build-arg TRAVIS_PULL_REQUEST=${TRAVIS_PULL_REQUEST} --build-arg TRAVIS_JOB_ID=${TRAVIS_JOB_ID}
                --build-arg TRAVIS_TAG=${TRAVIS_TAG} --build-arg TRAVIS_REPO_SLUG=${TRAVIS_REPO_SLUG}
                --build-arg TRAVIS_COMMIT=${TRAVIS_COMMIT}
                -t ${TRAVIS_REPO_SLUG}:${DISTRO}${TAG} -f ${HOME}/docker/Dockerfile.quinoa-build-travis ${HOME}/docker/ &&
    rm -rf ${HOME}/.ccache &&
    CON=$(docker run -d ${TRAVIS_REPO_SLUG}:${DISTRO}${TAG} /bin/bash) &&
    docker cp ${CON}:/home/quinoa/.ccache ${HOME}/

after_success:
  - if [[ ${DOCKERHUB} = true && ${DOCKER_USERNAME} && ${DOCKER_PASSWORD} && ${TRAVIS_PULL_REQUEST} == false && ${TRAVIS_BRANCH} == master ]]; then
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
      docker push "${TRAVIS_REPO_SLUG}:${DISTRO}${TAG}";
    fi

cache:
  - ccache

compiler:
  - gcc
  - clang

notifications:
  email:
    recipients:
      secure: ec1yseV2bUIqzDHZjqgBGhMsTNQSFdwWQ17cmoeaIV2CazQYufSeeLiYqAV6uTvas0lkEY1Bwcdw1NOvZQm4tPEsw+JKujhwFX6aQQMluEh+lAWUxVRRAow1B5hndX+tULnOSV0ArhgEqLxsgrwB64aeea5MBkHhalBaC4MLf77r5+94COerB//BVVNR2zYhR6CVXFdZv8+/PlYyzlKd5i6YwEhJZNlwZtQEunxbF9NoCGNMtwexPf4aFiJ6JAZmiky8QSGapMzAevbiykZOb3TDBdoA2duh4lpWk5FczQ+AhY2ZvD3mIzskFikZYELog+T78QPF07sZ5gJ0uiWmf+IptaYaKi8imgjJwVSLnCzqdMotxqAqPStBYYS3lM5bdd70wX6kshuO+llUBwvXZBL6MZ3Cp/PA4I/8+8XgMjW+B1o5IBjpsv5A9fZL88VbcOevCJ/Y1iAFQrxuxceGLptT1Z/cCLlzV2hXdvGY0YThl4EuCx8WCEWeoXrgySkEtQTdK7kuU+Owg0Lu/lf4uk6PJQWUyYwHMaZYk9Bn4jqNb1OL5bZZYXXxzaG9eJ61O5fG/jtoZSCtGXKLSKXajpPWHCbaaIOTDYvF3afKecU6VGlQbUr3phJuDBhtoJ+7AoamVFNjXx6oXZojVtvGruPKS0crmIJtvDEBApAl5CU=
