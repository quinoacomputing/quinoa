Here is a build script to build SEACAS in Trilinos. 

SEACAS uses the following TPLS, some are optional: 

* netcdf -- http://www.unidata.ucar.edu/software/netcdf/index.html
  - used by exodus and nemesis (and ioss since it uses exodus and nemesis)
  - see libraries/exodus/README for some details on modifications recommended for netcdf.

* xdmf -- http://xdmf.org/index.php/Main_Page
  - optionally used for ioss.  A DoD HPC code output format.

* hdf5 -- http://www.hdfgroup.org/HDF5
  - optionally used by netcdf in netcdf-4 mode.
  - used by xdmf

* pamgen -- http://trilinos.sandia.gov/packages/pamgen

========================================================================
CMake defines used to build SEACAS:
      -D Trilinos_ENABLE_SEACAS:BOOL=ON 
  
  EXODUS:  
    If the exodus library should be built, then add the defines:
      -D Trilinos_ENABLE_SEACAS:BOOL=ON 
      -D Trilinos_ENABLE_SECONDARY_STABLE_CODE:BOOL=ON
      -D Netcdf_LIBRARY_DIRS:PATH={path to netcdf library}
      -D TPL_ENABLE_Netcdf:BOOL=ON
      -D TPL_Netcdf_INCLUDE_DIRS:PATH={path to netcdf includes}
    This will also enable exodus support in the ioss library.
      
    If using a netcdf library that is built with --enable-netcdf-4,
    then you also need to tell it to link with the hdf5
    libraries. There is not really a good way to do this; the best
    option is:

    -D Trilinos_EXTRA_LINK_FLAGS="-L{path_to_hdf5_libraries} -lhdf5_hl -lhdf5 -lz -lm"

  PAMGEN: 
    For pamgen support in ioss, add the defines:
      -D Trilinos_ENABLE_Pamgen:BOOL=TRUE 

  XDMF:
      -D SEACAS_ENABLE_XDMF:BOOL=FALSE 
  if xdmf enabled: (will also need hdf5 library)
      -D TPL_XDMF_INCLUDE_DIRS:PATH={path to xdmf includes}
      -D XDMF_LIBRARY_DIRS:PATH={path to xdmf library}

  SEACAS/ioss can be built either in serial mode or with mpi using the
  standard Trilinos configuration flag.  The exodus and nemesis
  libraries can be built either way, but they have no mpi-related
  code, so the parallel and serial libraries are the same.

A script that can be used to build SEACAS is:
--------------------------------cut here--------------------------------
EXTRA_ARGS=$@

export MPI_BASE_DIR=/usr/netpub/mpi/OpenMPI/1.4/64Bit/gnu
FORTRAN_COMPILER=/usr/bin/gfortran

# Have to set this to get TRY_RUN(...) commands to work
export LD_LIBRARY_PATH=$MPI_BASE_DIR/lib:$LD_LIBRARY_PATH

#MPI=ON
MPI=OFF

if [ "$MPI" == "ON" ]
then
  CXX=${MPI_BASE_DIR}/bin/mpiCC
  CC=${MPI_BASE_DIR}/bin/mpicc
  FC=${MPI_BASE_DIR}/bin/mpif77
else
  CXX=/opt/local/bin/g++-mp-4.5
  CC=/opt/local/bin/gcc-mp-4.5
  FC=/opt/local/bin/gcc-gfortran-mp-4.5
fi

ACCESS=/home/gdsjaar/src/SEACAS.git/netcdf-tmp/

cmake  \
-D BUILD_SHARED_LIBS:BOOL=OFF \
-D CMAKE_CXX_COMPILER:FILEPATH=${CXX} \
-D CMAKE_C_COMPILER:FILEPATH=${CC} \
-D CMAKE_Fortran_COMPILER:FILEPATH=${FC} \
-D CMAKE_INSTALL_PREFIX:PATH=../install_gnu4.2.4ip \
-D CMAKE_INSTALL_PREFIX:PATH=/scratch/gdsjaar/TrilinosTest \
-D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF \
-D DART_TESTING_TIMEOUT:STRING=600 \
-D Netcdf_LIBRARY_DIRS:PATH=${ACCESS}/lib \
-D TPL_Boost_INCLUDE_DIRS:PATH=/Users/gdsjaar/src/Sierra/votd/TPLs_src/boost/ \
-D TPL_ENABLE_MATLAB:BOOL=OFF \
-D TPL_ENABLE_MPI:BOOL=${MPI} \
-D TPL_ENABLE_Netcdf:BOOL=ON \
-D TPL_Netcdf_INCLUDE_DIRS:PATH=${ACCESS}/include \
-D Trilinos_EXTRA_LINK_FLAGS="-L${ACCESS}/lib -lhdf5_hl -lhdf5 -lz -lm" \
-D Trilinos_ENABLE_CHECKED_STL:BOOL=OFF \
-D Trilinos_ENABLE_Pamgen:BOOL=ON \
-D Trilinos_ENABLE_SEACAS:BOOL=ON \
-D Trilinos_ENABLE_SECONDARY_STABLE_CODE:BOOL=ON \
-D Trilinos_ENABLE_TESTS:BOOL=ON \
$EXTRA_ARGS \
../

--------------------------------cut here--------------------------------
