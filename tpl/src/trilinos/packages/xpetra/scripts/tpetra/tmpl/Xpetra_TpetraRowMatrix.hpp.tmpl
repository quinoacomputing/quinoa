$TMPL_HEADERS

// WARNING: This code is experimental. Backwards compatibility should not be expected.

$TMPL_INCLUDES

#include "Xpetra_TpetraConfigDefs.hpp"

#include "Tpetra_RowMatrix.hpp"

#include "Xpetra_RowMatrix.hpp"
#include "Xpetra_Exceptions.hpp"

namespace Xpetra {

  $TMPL_TEMPLATE_PARAM
  class $TMPL_CLASS
  $TMPL_INHERITANCE
  {

  public:

$TMPL_PUBLIC_FUNCTIONS

    //! @name Xpetra specific
    //@{

    //! TpetraCrsMatrix constructor to wrap a Tpetra::CrsMatrix object
    TpetraRowMatrix(const Teuchos::RCP<Tpetra::RowMatrix<Scalar, LocalOrdinal, GlobalOrdinal, Node> > &mtx) : mtx_(mtx) {  }

    //! Get the underlying Tpetra matrix
    RCP<const Tpetra::RowMatrix<Scalar, LocalOrdinal, GlobalOrdinal, Node> > getTpetra_RowMatrix() const { return mtx_; }

    //! Get the underlying Tpetra matrix
    RCP<Tpetra::RowMatrix<Scalar, LocalOrdinal, GlobalOrdinal, Node> > getTpetra_RowMatrixNonConst() const { return mtx_; } //TODO: remove

   //@}

  private:

    RCP< Tpetra::RowMatrix<Scalar, LocalOrdinal, GlobalOrdinal, Node> > mtx_;

  }; // $TMPL_CLASS class

} // Xpetra namespace

$TMPL_FOOTERS
