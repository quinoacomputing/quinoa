# @HEADER
#
########################################################################
#
#  Zoltan Toolkit for Load-balancing, Partitioning, Ordering and Coloring
#                  Copyright 2012 Sandia Corporation
#
# Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
# the U.S. Government retains certain rights in this software.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the Corporation nor the names of the
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Questions? Contact Karen Devine	kddevin@sandia.gov
#                    Erik Boman	        egboman@sandia.gov
#
########################################################################
#
# @HEADER


RCB DIRECTORY -- Implementation of Recursive Coordinate Bisection.  Also
                 includes Recursive Inertial Bisection due to the similarity
                 of the algorithms.
-----------------------------------------------------------------------------

rcb_const.h   -- Data structure definitions needed for RCB (RCB_Struct,
                 rcb_box, rcb_median, rcb_tree).  Prototypes for
                 external functions in rcb_util.c.

rcb.c         -- Implementation of RCB.

rcb_util.c    -- Functions that call the load-balancing query routines to
                 build the data structures needed for RCB algorithm.

point_assign.c -- Given a geometric decomposition constructed via RCB or RIB,
		 this routine determines which processor a particular
		 geometric point is assigned to.

box_assign.c  -- Given a geometric decomposition constructed via RCB or RIB,
		 this routine determines which processors an axis-aligned
		 box intersects.

create_proc_list.c -- Create the communication list to communicate dots
                      between processors in each half at each step of
                      RCB or RIB.

create_proc_list_const.h -- Prototype for create_proc_list.c.

rib_const.h   -- Data structure definitions needed for RIB (RIB_Struct,
                 rib_tree).  Prototypes for external functions
                 in rib_util.c

rib.c         -- Implementation of RIB.

rib_util.c    -- Functions that call the load-balancing query routines to
                 build the data structures needed for RIB algorithm.

inertial1d.c  -- Determine center of mass and direction of perpendicular to
                 cutting plane for 1d inertial.

inertial2d.c  -- Determine center of mass and direction of perpendicular to
                 cutting plane for 2d inertial.

inertial3d.c  -- Determine center of mass and direction of perpendicular to
                 cutting plane for 3d inertial.

shared.c      -- Functions shared by RCB and RIB.

shared_const.h-- Data structures and function prototypes shared by RCB and
                 RIB.
