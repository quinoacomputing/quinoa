# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#  Thyra: Interfaces and Support Code for the Interoperability of
#                Abstract Numerical Algorithms
#
#                Copyright (2004) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************
# @HEADER

# The following line helps the test harness recover from build errors.


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/Thyra_Config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/tac_arg_check_mpi.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_can_use_package.m4 \
	$(top_srcdir)/config/tac_arg_enable_export-makefiles.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub_check.m4 \
	$(top_srcdir)/config/tac_arg_inform_subpackage_used.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_flags.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_perl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = Thyra_Config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(execincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
am__DEPENDENCIES_1 =
libthyra_a_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 = Thyra_VectorSpaceBase.$(OBJEXT)
am__objects_2 = Thyra_ModelEvaluatorBase.$(OBJEXT)
am__objects_3 = Thyra_DefaultMultipliedLinearOp.$(OBJEXT) \
	Thyra_DefaultProductMultiVector.$(OBJEXT) \
	Thyra_DefaultProductVector.$(OBJEXT) \
	Thyra_DefaultProductVectorSpace.$(OBJEXT) \
	Thyra_DefaultScaledAdjointLinearOp.$(OBJEXT) \
	Thyra_LinearOpTester.$(OBJEXT) Thyra_TestingTools.$(OBJEXT)
am__objects_4 = Thyra_DefaultSpmdVectorSpace.$(OBJEXT) \
	Thyra_EuclideanScalarProd.$(OBJEXT) \
	Thyra_LinearOpScalarProd.$(OBJEXT) \
	Thyra_ScalarProdBase.$(OBJEXT) \
	Thyra_ScalarProdVectorSpaceBase.$(OBJEXT) \
	Thyra_SpmdVectorSpaceUtilities.$(OBJEXT)
am__objects_5 =  \
	Thyra_DefaultBlockedTriangularLinearOpWithSolve.$(OBJEXT) \
	Thyra_DefaultPreconditioner.$(OBJEXT) \
	Thyra_DefaultInverseLinearOp.$(OBJEXT)
am_libthyra_a_OBJECTS = Thyra_Version.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5)
libthyra_a_OBJECTS = $(am_libthyra_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libthyra_a_SOURCES)
DIST_SOURCES = $(libthyra_a_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
HAVE_PERL = @HAVE_PERL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
MPI_TEMP_CXX = @MPI_TEMP_CXX@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_EXE = @PERL_EXE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRILINOS_TEMPLATE_OBJS = @TRILINOS_TEMPLATE_OBJS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside New_Package. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------

#
# There is, at present, no distinction between most of the categories, 
# other than those which start with EXTRA_.  All categories which do not
# start with EXTRA_ are included in all builds.  Categories which start
# with EXTRA_ are included in some builds (typically controlled by 
# --with-xyz or --without-xyz)
#
INTERFACES_OPERATOR_VECTOR_ANA_FUNDAMENTAL_H = \
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_LinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_LinearOpBaseDecl.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_MultiVectorBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_MultiVectorBaseDecl.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_OperatorVectorTypes.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase_decl.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase_def.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceFactoryBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceFactoryBase.hpp

INTERFACES_OPERATOR_VECTOR_ANA_FUNDAMENTAL = \
  $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp

INTERFACES_OPERATOR_VECTOR_ANA_EXTENDED_H = \
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_AddedLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_BlockedLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_DiagonalLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_IdentityLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_MultipliedLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_MultiVectorFileIOBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_MultiVectorRandomizerBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_PhysicallyBlockedLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_PolynomialVectorTraits.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_ProductMultiVectorBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_ProductVectorBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_ProductVectorSpaceBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_ScaledAdjointLinearOpBaseDecl.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_ScaledAdjointLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_SpmdVectorSpaceBaseDecl.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_SpmdVectorSpaceBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_VectorSpaceConverterBase.hpp\
  $(srcdir)/interfaces/operator_vector/ana/extended/Thyra_ZeroLinearOpBase.hpp

SUPPORT_OPERATOR_VECTOR_CLIENT_SUPPORT_H = \
  $(srcdir)/support/operator_vector/client_support/Thyra_AssertOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultAddedLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultAddedLinearOpDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultBlockedLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultBlockedLinearOp_decl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultColumnwiseMultiVector.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultColumnwiseMultiVectorDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultDiagonalLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultDiagonalLinearOpDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultIdentityLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultIdentityLinearOpDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultiVectorProductVector.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultiVectorProductVectorDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultiVectorProductVectorSpace.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultiVectorProductVectorSpaceDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp_decl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp_def.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector_decl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector_def.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector_decl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector_def.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace_decl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace_def.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp_decl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp_def.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultZeroLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultZeroLinearOpDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DetachedMultiVectorView.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DetachedVectorView.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearCombinationDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearCombinationImpl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearCombinationTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpDefaultBase.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpDefaultBaseDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester_decl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester_def.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOperatorDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOperatorImpl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_ListedMultiVectorRandomizer.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorAllocator.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorDefaultBase.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorDefaultBaseDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorStdOps.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorStdOpsDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorStdOpsTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorStdOpsTesterDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_MultiVectorTesterDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_OperatorVectorClientSupport.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_ParameterDrivenMultiVectorInput.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_SingleRhsLinearOpBase.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_SingleRhsLinearOpBaseDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_SingleScalarLinearOpBase.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_SingleScalarLinearOpBaseDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_TestSpecifier.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_TesterBase.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_TestingToolsDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_UniversalMultiVectorRandomizer.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VecOpMacros.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorDefaultBase.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorDefaultBaseDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorHandleOpsDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorHandleOpsImpl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorImpl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorOpTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorSpaceDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorSpaceDefaultBase.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorSpaceDefaultBaseDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorSpaceImpl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorSpaceTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorSpaceTesterDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorStdOps.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorStdOpsDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorStdOpsTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorStdOpsTesterDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorTester.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_VectorTesterDecl.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_describeLinearOp.hpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_describeLinearOpDecl.hpp

SUPPORT_OPERATOR_VECTOR_CLIENT_SUPPORT = \
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp\
  $(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp

SUPPORT_OPERATOR_VECTOR_ADAPTER_SUPPORT_H = \
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultClusteredSpmdProductVector.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultClusteredSpmdProductVectorDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultClusteredSpmdProductVectorSpace.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultClusteredSpmdProductVectorSpaceDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdMultiVector.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdMultiVectorDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdMultiVectorFileIO.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVector.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace_decl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace_def.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpaceFactory.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpaceFactoryDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanLinearOpBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanLinearOpBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd_decl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd_def.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd_decl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd_def.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_OperatorVectorAdapterSupportTypes.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase_decl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase_def.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase_decl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase_def.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SingleRhsEuclideanLinearOpBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SingleRhsEuclideanLinearOpBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SingleScalarEuclideanLinearOpBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SingleScalarEuclideanLinearOpBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdLinearOpBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdLinearOpBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdMultiVectorBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdMultiVectorBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdMultiVectorSerializer.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdMultiVectorSerializerDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceDefaultBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceDefaultBase_decl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceDefaultBase_def.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_apply_op_helper.hpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_apply_op_helper_decl.hpp

SUPPORT_OPERATOR_VECTOR_ADAPTER_SUPPORT = \
  $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp\
  $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp

SUPPORT_OPERATOR_VECTOR_ADAPTER_SUPPORT_SERIAL_H = \
  $(srcdir)/support/operator_vector/adapter_support/serial/Thyra_DefaultSerialVectorSpaceConverterDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/serial/Thyra_DefaultSerialVectorSpaceConverter.hpp\
  $(srcdir)/support/operator_vector/adapter_support/serial/Thyra_SerialLinearOpBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/serial/Thyra_SerialLinearOpBase.hpp\
  $(srcdir)/support/operator_vector/adapter_support/serial/Thyra_SerialVectorSpaceConverterBaseDecl.hpp\
  $(srcdir)/support/operator_vector/adapter_support/serial/Thyra_SerialVectorSpaceConverterBase.hpp

INTERFACES_OPERATOR_SOLVE_ANA_FUNDAMENTAL_H = \
  $(srcdir)/interfaces/operator_solve/ana/fundamental/Thyra_LinearOpSourceBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/fundamental/Thyra_LinearOpWithSolveBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/fundamental/Thyra_LinearOpWithSolveBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/fundamental/Thyra_LinearOpWithSolveFactoryBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/fundamental/Thyra_PreconditionerBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/fundamental/Thyra_PreconditionerFactoryBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/fundamental/Thyra_SolveSupportTypes.hpp

INTERFACES_OPERATOR_SOLVE_ANA_EXTENDED_H = \
  $(srcdir)/interfaces/operator_solve/ana/extended/Thyra_BlockedLinearOpWithSolveBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/extended/Thyra_InverseLinearOpBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/extended/Thyra_LinearSolverBuilderBase.hpp\
  $(srcdir)/interfaces/operator_solve/ana/extended/Thyra_PhysicallyBlockedLinearOpWithSolveBase.hpp

SUPPORT_OPERATOR_SOLVE_CLIENT_SUPPORT_H = \
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultAdjointLinearOpWithSolve.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultAdjointLinearOpWithSolveDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve_decl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve_def.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolveFactory.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolveFactoryDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultDiagonalLinearOpWithSolve.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultDiagonalLinearOpWithSolveDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp_decl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp_def.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultLinearOpSource.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultLinearOpSourceDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultMultiVectorLinearOpWithSolve.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultMultiVectorLinearOpWithSolveDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner_decl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner_def.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultSerialDenseLinearOpWithSolve.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultSerialDenseLinearOpWithSolveDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultSerialDenseLinearOpWithSolveFactory.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultSerialDenseLinearOpWithSolveFactoryDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DelayedLinearOpWithSolve.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DelayedLinearOpWithSolveDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DelayedLinearOpWithSolveFactory.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DelayedLinearOpWithSolveFactoryDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_InverseLinearOperator.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_LinearOpWithSolveFactoryHelpers.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_LinearOpWithSolveHelpers.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_LinearOpWithSolveTester.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_LinearOpWithSolveTesterDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_PreconditionerFactoryHelpers.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_SingleRhsLinearOpWithSolveBase.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_SingleRhsLinearOpWithSolveBaseDecl.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_SingleScalarLinearOpWithSolveBase.hpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_SingleScalarLinearOpWithSolveBaseDecl.hpp

SUPPORT_OPERATOR_SOLVE_CLIENT_SUPPORT = \
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp\
  $(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp

INTERFACES_NONLINEAR_MODEL_EVALUATOR_ANA_FUNDAMENTAL_H = \
  $(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluator.hpp\
  $(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.hpp\
  $(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase_decl.hpp\
  $(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase_def.hpp

INTERFACES_NONLINEAR_MODEL_EVALUATOR_ANA_FUNDAMENTAL = \
  $(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp

SUPPORT_NONLINEAR_MODEL_EVALUATOR_CLIENT_SUPPORT_H = \
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultLumpedParameterModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultEvaluationLoggerModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultFinalPointCaptureModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultFiniteDifferenceModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultFiniteDifferenceModelEvaluator_decl.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultFiniteDifferenceModelEvaluator_def.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultInverseModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultLumpedParameterModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultModelEvaluatorWithSolveFactory.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultMultiPeriodModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DefaultNominalBoundsOverrideModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DirectionalFiniteDiffCalculator.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DirectionalFiniteDiffCalculator_decl.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_DirectionalFiniteDiffCalculator_def.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_ModelEvaluatorDefaultBase.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_ModelEvaluatorDelegatorBase.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_ModelEvaluatorHelpers.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_ResponseOnlyModelEvaluatorBase.hpp\
  $(srcdir)/support/nonlinear/model_evaluator/client_support/Thyra_StateFuncModelEvaluatorBase.hpp

INTERFACES_NONLINEAR_SOLVERS_ANA_FUNDAMENTAL_H = \
  $(srcdir)/interfaces/nonlinear/solvers/ana/fundamental/Thyra_NonlinearSolverBase.hpp

SUPPORT_NONLINEAR_SOLVERS_CLIENT_SUPPORT_H = \
  $(srcdir)/support/nonlinear/solvers/client_support/Thyra_DampenedNewtonNonlinearSolver.hpp\
  $(srcdir)/support/nonlinear/solvers/client_support/Thyra_DefaultStateEliminationModelEvaluator.hpp\
  $(srcdir)/support/nonlinear/solvers/client_support/Thyra_LinearNonlinearSolver.hpp

OPERATOR_VECTOR_EXAMPLE_H = \
  $(top_srcdir)/example/operator_vector/sillyModifiedGramSchmidt.hpp

@USING_GNUMAKE_FALSE@EXPORT_INCLUDES = $(THYRA_INCLUDES)
@USING_GNUMAKE_TRUE@EXPORT_INCLUDES = $(shell $(PERL_EXE) $(top_srcdir)/config/strip_dup_incl_paths.pl $(THYRA_INCLUDES))
AM_CPPFLAGS = $(EXPORT_INCLUDES)

# --------------------------------------------------------------------
# Thyra library specifications
# --------------------------------------------------------------------
THYRA_LIB = libthyra.a
THYRA_H = \
  $(srcdir)/Thyra_ConfigDefs.hpp $(srcdir)/Thyra_Version.hpp \
  $(INTERFACES_OPERATOR_VECTOR_ANA_FUNDAMENTAL_H)\
  $(INTERFACES_OPERATOR_VECTOR_ANA_EXTENDED_H)\
  $(SUPPORT_OPERATOR_VECTOR_CLIENT_SUPPORT_H)\
  $(SUPPORT_OPERATOR_VECTOR_ADAPTER_SUPPORT_H)\
  $(SUPPORT_OPERATOR_VECTOR_ADAPTER_SUPPORT_SERIAL_H)\
  $(INTERFACES_OPERATOR_SOLVE_ANA_FUNDAMENTAL_H)\
  $(INTERFACES_OPERATOR_SOLVE_ANA_EXTENDED_H)\
  $(SUPPORT_OPERATOR_SOLVE_CLIENT_SUPPORT_H)\
  $(INTERFACES_NONLINEAR_MODEL_EVALUATOR_ANA_FUNDAMENTAL_H)\
  $(SUPPORT_NONLINEAR_MODEL_EVALUATOR_CLIENT_SUPPORT_H)\
  $(INTERFACES_NONLINEAR_SOLVERS_ANA_FUNDAMENTAL_H)\
  $(SUPPORT_NONLINEAR_SOLVERS_CLIENT_SUPPORT_H)\
  $(OPERATOR_VECTOR_EXAMPLE_H)

libthyra_a_SOURCES = $(srcdir)/Thyra_Version.cpp \
  $(INTERFACES_OPERATOR_VECTOR_ANA_FUNDAMENTAL) \
  $(INTERFACES_NONLINEAR_MODEL_EVALUATOR_ANA_FUNDAMENTAL) \
  $(SUPPORT_OPERATOR_VECTOR_CLIENT_SUPPORT) \
  $(SUPPORT_OPERATOR_VECTOR_ADAPTER_SUPPORT) \
  $(SUPPORT_OPERATOR_SOLVE_CLIENT_SUPPORT)

@USE_ALTERNATE_AR_FALSE@libthyra_a_AR = $(AR) cru

#We need the following to support separate build directories

# --------------------------------------------------------------------
# For using a special archiver
# --------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libthyra_a_AR = $(ALTERNATE_AR)

# --------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# --------------------------------------------------------------------

# I have not been able to find any kind of "or" for Automake
# conditionals. JW
libthyra_a_LIBADD = $(TRILINOS_TEMPLATE_OBJS) $(XTRALDADD)

# --------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# --------------------------------------------------------------------
lib_LIBRARIES = $(THYRA_LIB)

# --------------------------------------------------------------------
# List of all headers to install in $(includedir)
# --------------------------------------------------------------------
include_HEADERS = $(THYRA_H) 

# --------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# --------------------------------------------------------------------

# SPECIAL NOTE: ThyraConfig.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.
execincludedir = $(includedir)
nodist_execinclude_HEADERS = Thyra_Config.h

# --------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# --------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
all: Thyra_Config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

Thyra_Config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/Thyra_Config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/Thyra_Config.h
$(srcdir)/Thyra_Config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f Thyra_Config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libthyra.a: $(libthyra_a_OBJECTS) $(libthyra_a_DEPENDENCIES) 
	-rm -f libthyra.a
	$(libthyra_a_AR) libthyra.a $(libthyra_a_OBJECTS) $(libthyra_a_LIBADD)
	$(RANLIB) libthyra.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultBlockedTriangularLinearOpWithSolve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultInverseLinearOp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultMultipliedLinearOp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultPreconditioner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultProductMultiVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultProductVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultProductVectorSpace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultScaledAdjointLinearOp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DefaultSpmdVectorSpace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_EuclideanScalarProd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_LinearOpScalarProd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_LinearOpTester.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_ModelEvaluatorBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_ScalarProdBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_ScalarProdVectorSpaceBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_SpmdVectorSpaceUtilities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_TestingTools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_VectorSpaceBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_Version.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Thyra_Version.o: $(srcdir)/Thyra_Version.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_Version.o -MD -MP -MF $(DEPDIR)/Thyra_Version.Tpo -c -o Thyra_Version.o `test -f '$(srcdir)/Thyra_Version.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_Version.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_Version.Tpo $(DEPDIR)/Thyra_Version.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_Version.cpp' object='Thyra_Version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_Version.o `test -f '$(srcdir)/Thyra_Version.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_Version.cpp

Thyra_Version.obj: $(srcdir)/Thyra_Version.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_Version.obj -MD -MP -MF $(DEPDIR)/Thyra_Version.Tpo -c -o Thyra_Version.obj `if test -f '$(srcdir)/Thyra_Version.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_Version.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_Version.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_Version.Tpo $(DEPDIR)/Thyra_Version.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_Version.cpp' object='Thyra_Version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_Version.obj `if test -f '$(srcdir)/Thyra_Version.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_Version.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_Version.cpp'; fi`

Thyra_VectorSpaceBase.o: $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_VectorSpaceBase.o -MD -MP -MF $(DEPDIR)/Thyra_VectorSpaceBase.Tpo -c -o Thyra_VectorSpaceBase.o `test -f '$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp' || echo '$(srcdir)/'`$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_VectorSpaceBase.Tpo $(DEPDIR)/Thyra_VectorSpaceBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp' object='Thyra_VectorSpaceBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_VectorSpaceBase.o `test -f '$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp' || echo '$(srcdir)/'`$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp

Thyra_VectorSpaceBase.obj: $(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_VectorSpaceBase.obj -MD -MP -MF $(DEPDIR)/Thyra_VectorSpaceBase.Tpo -c -o Thyra_VectorSpaceBase.obj `if test -f '$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp'; then $(CYGPATH_W) '$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_VectorSpaceBase.Tpo $(DEPDIR)/Thyra_VectorSpaceBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp' object='Thyra_VectorSpaceBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_VectorSpaceBase.obj `if test -f '$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp'; then $(CYGPATH_W) '$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/interfaces/operator_vector/ana/fundamental/Thyra_VectorSpaceBase.cpp'; fi`

Thyra_ModelEvaluatorBase.o: $(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_ModelEvaluatorBase.o -MD -MP -MF $(DEPDIR)/Thyra_ModelEvaluatorBase.Tpo -c -o Thyra_ModelEvaluatorBase.o `test -f '$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp' || echo '$(srcdir)/'`$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_ModelEvaluatorBase.Tpo $(DEPDIR)/Thyra_ModelEvaluatorBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp' object='Thyra_ModelEvaluatorBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_ModelEvaluatorBase.o `test -f '$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp' || echo '$(srcdir)/'`$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp

Thyra_ModelEvaluatorBase.obj: $(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_ModelEvaluatorBase.obj -MD -MP -MF $(DEPDIR)/Thyra_ModelEvaluatorBase.Tpo -c -o Thyra_ModelEvaluatorBase.obj `if test -f '$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp'; then $(CYGPATH_W) '$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_ModelEvaluatorBase.Tpo $(DEPDIR)/Thyra_ModelEvaluatorBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp' object='Thyra_ModelEvaluatorBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_ModelEvaluatorBase.obj `if test -f '$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp'; then $(CYGPATH_W) '$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/interfaces/nonlinear/model_evaluator/ana/fundamental/Thyra_ModelEvaluatorBase.cpp'; fi`

Thyra_DefaultMultipliedLinearOp.o: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultMultipliedLinearOp.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultMultipliedLinearOp.Tpo -c -o Thyra_DefaultMultipliedLinearOp.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultMultipliedLinearOp.Tpo $(DEPDIR)/Thyra_DefaultMultipliedLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp' object='Thyra_DefaultMultipliedLinearOp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultMultipliedLinearOp.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp

Thyra_DefaultMultipliedLinearOp.obj: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultMultipliedLinearOp.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultMultipliedLinearOp.Tpo -c -o Thyra_DefaultMultipliedLinearOp.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultMultipliedLinearOp.Tpo $(DEPDIR)/Thyra_DefaultMultipliedLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp' object='Thyra_DefaultMultipliedLinearOp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultMultipliedLinearOp.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultMultipliedLinearOp.cpp'; fi`

Thyra_DefaultProductMultiVector.o: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultProductMultiVector.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultProductMultiVector.Tpo -c -o Thyra_DefaultProductMultiVector.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultProductMultiVector.Tpo $(DEPDIR)/Thyra_DefaultProductMultiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp' object='Thyra_DefaultProductMultiVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultProductMultiVector.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp

Thyra_DefaultProductMultiVector.obj: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultProductMultiVector.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultProductMultiVector.Tpo -c -o Thyra_DefaultProductMultiVector.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultProductMultiVector.Tpo $(DEPDIR)/Thyra_DefaultProductMultiVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp' object='Thyra_DefaultProductMultiVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultProductMultiVector.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductMultiVector.cpp'; fi`

Thyra_DefaultProductVector.o: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultProductVector.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultProductVector.Tpo -c -o Thyra_DefaultProductVector.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultProductVector.Tpo $(DEPDIR)/Thyra_DefaultProductVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp' object='Thyra_DefaultProductVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultProductVector.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp

Thyra_DefaultProductVector.obj: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultProductVector.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultProductVector.Tpo -c -o Thyra_DefaultProductVector.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultProductVector.Tpo $(DEPDIR)/Thyra_DefaultProductVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp' object='Thyra_DefaultProductVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultProductVector.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVector.cpp'; fi`

Thyra_DefaultProductVectorSpace.o: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultProductVectorSpace.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultProductVectorSpace.Tpo -c -o Thyra_DefaultProductVectorSpace.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultProductVectorSpace.Tpo $(DEPDIR)/Thyra_DefaultProductVectorSpace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp' object='Thyra_DefaultProductVectorSpace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultProductVectorSpace.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp

Thyra_DefaultProductVectorSpace.obj: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultProductVectorSpace.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultProductVectorSpace.Tpo -c -o Thyra_DefaultProductVectorSpace.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultProductVectorSpace.Tpo $(DEPDIR)/Thyra_DefaultProductVectorSpace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp' object='Thyra_DefaultProductVectorSpace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultProductVectorSpace.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultProductVectorSpace.cpp'; fi`

Thyra_DefaultScaledAdjointLinearOp.o: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultScaledAdjointLinearOp.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultScaledAdjointLinearOp.Tpo -c -o Thyra_DefaultScaledAdjointLinearOp.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultScaledAdjointLinearOp.Tpo $(DEPDIR)/Thyra_DefaultScaledAdjointLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp' object='Thyra_DefaultScaledAdjointLinearOp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultScaledAdjointLinearOp.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp

Thyra_DefaultScaledAdjointLinearOp.obj: $(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultScaledAdjointLinearOp.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultScaledAdjointLinearOp.Tpo -c -o Thyra_DefaultScaledAdjointLinearOp.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultScaledAdjointLinearOp.Tpo $(DEPDIR)/Thyra_DefaultScaledAdjointLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp' object='Thyra_DefaultScaledAdjointLinearOp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultScaledAdjointLinearOp.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_DefaultScaledAdjointLinearOp.cpp'; fi`

Thyra_LinearOpTester.o: $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_LinearOpTester.o -MD -MP -MF $(DEPDIR)/Thyra_LinearOpTester.Tpo -c -o Thyra_LinearOpTester.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_LinearOpTester.Tpo $(DEPDIR)/Thyra_LinearOpTester.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp' object='Thyra_LinearOpTester.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_LinearOpTester.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp

Thyra_LinearOpTester.obj: $(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_LinearOpTester.obj -MD -MP -MF $(DEPDIR)/Thyra_LinearOpTester.Tpo -c -o Thyra_LinearOpTester.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_LinearOpTester.Tpo $(DEPDIR)/Thyra_LinearOpTester.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp' object='Thyra_LinearOpTester.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_LinearOpTester.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_LinearOpTester.cpp'; fi`

Thyra_TestingTools.o: $(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_TestingTools.o -MD -MP -MF $(DEPDIR)/Thyra_TestingTools.Tpo -c -o Thyra_TestingTools.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_TestingTools.Tpo $(DEPDIR)/Thyra_TestingTools.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp' object='Thyra_TestingTools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_TestingTools.o `test -f '$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp

Thyra_TestingTools.obj: $(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_TestingTools.obj -MD -MP -MF $(DEPDIR)/Thyra_TestingTools.Tpo -c -o Thyra_TestingTools.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_TestingTools.Tpo $(DEPDIR)/Thyra_TestingTools.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp' object='Thyra_TestingTools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_TestingTools.obj `if test -f '$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/client_support/Thyra_TestingTools.cpp'; fi`

Thyra_DefaultSpmdVectorSpace.o: $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultSpmdVectorSpace.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultSpmdVectorSpace.Tpo -c -o Thyra_DefaultSpmdVectorSpace.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultSpmdVectorSpace.Tpo $(DEPDIR)/Thyra_DefaultSpmdVectorSpace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp' object='Thyra_DefaultSpmdVectorSpace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultSpmdVectorSpace.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp

Thyra_DefaultSpmdVectorSpace.obj: $(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultSpmdVectorSpace.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultSpmdVectorSpace.Tpo -c -o Thyra_DefaultSpmdVectorSpace.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultSpmdVectorSpace.Tpo $(DEPDIR)/Thyra_DefaultSpmdVectorSpace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp' object='Thyra_DefaultSpmdVectorSpace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultSpmdVectorSpace.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_DefaultSpmdVectorSpace.cpp'; fi`

Thyra_EuclideanScalarProd.o: $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EuclideanScalarProd.o -MD -MP -MF $(DEPDIR)/Thyra_EuclideanScalarProd.Tpo -c -o Thyra_EuclideanScalarProd.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EuclideanScalarProd.Tpo $(DEPDIR)/Thyra_EuclideanScalarProd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp' object='Thyra_EuclideanScalarProd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EuclideanScalarProd.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp

Thyra_EuclideanScalarProd.obj: $(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EuclideanScalarProd.obj -MD -MP -MF $(DEPDIR)/Thyra_EuclideanScalarProd.Tpo -c -o Thyra_EuclideanScalarProd.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EuclideanScalarProd.Tpo $(DEPDIR)/Thyra_EuclideanScalarProd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp' object='Thyra_EuclideanScalarProd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EuclideanScalarProd.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_EuclideanScalarProd.cpp'; fi`

Thyra_LinearOpScalarProd.o: $(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_LinearOpScalarProd.o -MD -MP -MF $(DEPDIR)/Thyra_LinearOpScalarProd.Tpo -c -o Thyra_LinearOpScalarProd.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_LinearOpScalarProd.Tpo $(DEPDIR)/Thyra_LinearOpScalarProd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp' object='Thyra_LinearOpScalarProd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_LinearOpScalarProd.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp

Thyra_LinearOpScalarProd.obj: $(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_LinearOpScalarProd.obj -MD -MP -MF $(DEPDIR)/Thyra_LinearOpScalarProd.Tpo -c -o Thyra_LinearOpScalarProd.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_LinearOpScalarProd.Tpo $(DEPDIR)/Thyra_LinearOpScalarProd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp' object='Thyra_LinearOpScalarProd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_LinearOpScalarProd.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_LinearOpScalarProd.cpp'; fi`

Thyra_ScalarProdBase.o: $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_ScalarProdBase.o -MD -MP -MF $(DEPDIR)/Thyra_ScalarProdBase.Tpo -c -o Thyra_ScalarProdBase.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_ScalarProdBase.Tpo $(DEPDIR)/Thyra_ScalarProdBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp' object='Thyra_ScalarProdBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_ScalarProdBase.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp

Thyra_ScalarProdBase.obj: $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_ScalarProdBase.obj -MD -MP -MF $(DEPDIR)/Thyra_ScalarProdBase.Tpo -c -o Thyra_ScalarProdBase.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_ScalarProdBase.Tpo $(DEPDIR)/Thyra_ScalarProdBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp' object='Thyra_ScalarProdBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_ScalarProdBase.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdBase.cpp'; fi`

Thyra_ScalarProdVectorSpaceBase.o: $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_ScalarProdVectorSpaceBase.o -MD -MP -MF $(DEPDIR)/Thyra_ScalarProdVectorSpaceBase.Tpo -c -o Thyra_ScalarProdVectorSpaceBase.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_ScalarProdVectorSpaceBase.Tpo $(DEPDIR)/Thyra_ScalarProdVectorSpaceBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp' object='Thyra_ScalarProdVectorSpaceBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_ScalarProdVectorSpaceBase.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp

Thyra_ScalarProdVectorSpaceBase.obj: $(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_ScalarProdVectorSpaceBase.obj -MD -MP -MF $(DEPDIR)/Thyra_ScalarProdVectorSpaceBase.Tpo -c -o Thyra_ScalarProdVectorSpaceBase.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_ScalarProdVectorSpaceBase.Tpo $(DEPDIR)/Thyra_ScalarProdVectorSpaceBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp' object='Thyra_ScalarProdVectorSpaceBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_ScalarProdVectorSpaceBase.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_ScalarProdVectorSpaceBase.cpp'; fi`

Thyra_SpmdVectorSpaceUtilities.o: $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_SpmdVectorSpaceUtilities.o -MD -MP -MF $(DEPDIR)/Thyra_SpmdVectorSpaceUtilities.Tpo -c -o Thyra_SpmdVectorSpaceUtilities.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_SpmdVectorSpaceUtilities.Tpo $(DEPDIR)/Thyra_SpmdVectorSpaceUtilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp' object='Thyra_SpmdVectorSpaceUtilities.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_SpmdVectorSpaceUtilities.o `test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp

Thyra_SpmdVectorSpaceUtilities.obj: $(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_SpmdVectorSpaceUtilities.obj -MD -MP -MF $(DEPDIR)/Thyra_SpmdVectorSpaceUtilities.Tpo -c -o Thyra_SpmdVectorSpaceUtilities.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_SpmdVectorSpaceUtilities.Tpo $(DEPDIR)/Thyra_SpmdVectorSpaceUtilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp' object='Thyra_SpmdVectorSpaceUtilities.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_SpmdVectorSpaceUtilities.obj `if test -f '$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_vector/adapter_support/Thyra_SpmdVectorSpaceUtilities.cpp'; fi`

Thyra_DefaultBlockedTriangularLinearOpWithSolve.o: $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultBlockedTriangularLinearOpWithSolve.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultBlockedTriangularLinearOpWithSolve.Tpo -c -o Thyra_DefaultBlockedTriangularLinearOpWithSolve.o `test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultBlockedTriangularLinearOpWithSolve.Tpo $(DEPDIR)/Thyra_DefaultBlockedTriangularLinearOpWithSolve.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp' object='Thyra_DefaultBlockedTriangularLinearOpWithSolve.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultBlockedTriangularLinearOpWithSolve.o `test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp

Thyra_DefaultBlockedTriangularLinearOpWithSolve.obj: $(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultBlockedTriangularLinearOpWithSolve.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultBlockedTriangularLinearOpWithSolve.Tpo -c -o Thyra_DefaultBlockedTriangularLinearOpWithSolve.obj `if test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultBlockedTriangularLinearOpWithSolve.Tpo $(DEPDIR)/Thyra_DefaultBlockedTriangularLinearOpWithSolve.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp' object='Thyra_DefaultBlockedTriangularLinearOpWithSolve.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultBlockedTriangularLinearOpWithSolve.obj `if test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_solve/client_support/Thyra_DefaultBlockedTriangularLinearOpWithSolve.cpp'; fi`

Thyra_DefaultPreconditioner.o: $(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultPreconditioner.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultPreconditioner.Tpo -c -o Thyra_DefaultPreconditioner.o `test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultPreconditioner.Tpo $(DEPDIR)/Thyra_DefaultPreconditioner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp' object='Thyra_DefaultPreconditioner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultPreconditioner.o `test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp

Thyra_DefaultPreconditioner.obj: $(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultPreconditioner.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultPreconditioner.Tpo -c -o Thyra_DefaultPreconditioner.obj `if test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultPreconditioner.Tpo $(DEPDIR)/Thyra_DefaultPreconditioner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp' object='Thyra_DefaultPreconditioner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultPreconditioner.obj `if test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_solve/client_support/Thyra_DefaultPreconditioner.cpp'; fi`

Thyra_DefaultInverseLinearOp.o: $(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultInverseLinearOp.o -MD -MP -MF $(DEPDIR)/Thyra_DefaultInverseLinearOp.Tpo -c -o Thyra_DefaultInverseLinearOp.o `test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultInverseLinearOp.Tpo $(DEPDIR)/Thyra_DefaultInverseLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp' object='Thyra_DefaultInverseLinearOp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultInverseLinearOp.o `test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp

Thyra_DefaultInverseLinearOp.obj: $(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DefaultInverseLinearOp.obj -MD -MP -MF $(DEPDIR)/Thyra_DefaultInverseLinearOp.Tpo -c -o Thyra_DefaultInverseLinearOp.obj `if test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DefaultInverseLinearOp.Tpo $(DEPDIR)/Thyra_DefaultInverseLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp' object='Thyra_DefaultInverseLinearOp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DefaultInverseLinearOp.obj `if test -f '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/support/operator_solve/client_support/Thyra_DefaultInverseLinearOp.cpp'; fi`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(execincludedir)" || $(MKDIR_P) "$(DESTDIR)$(execincludedir)"
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_execincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(execincludedir)/$$f'"; \
	  $(nodist_execincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(execincludedir)/$$f"; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(execincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(execincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) Thyra_Config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Thyra_Config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) Thyra_Config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Thyra_Config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS) Thyra_Config.h all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(execincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES \
	install-nodist_execincludeHEADERS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-nodist_execincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLIBRARIES install-man \
	install-nodist_execincludeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-nodist_execincludeHEADERS


all-local:
	@echo ""
	@echo "Trilinos package thyra subdirectory src built successfully."
	@echo ""

#Specify locations of include files within Trilinos

include $(top_builddir)/Makefile.export.thyra
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
