%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (Shannon Whitehead) (Sandia National Laboratories)
%%Title: (DOEbwlogo.eps)
%%CreationDate: (4/18/00) (1:43 PM)
%%BoundingBox: 164 250 449 535
%%HiResBoundingBox: 164.6206 250.4463 448.3794 534.5537
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Bold
%%DocumentNeededFonts: Times-Bold
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Black&White
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: PC_ColorTIFF
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -270 804 1 1146 827 18 0 1 3 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:30 31
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -31 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
   	/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
   /c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Bold
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Times-Bold Times-Bold
[/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k
 0 0.4 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
0 XR
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929191908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
626161605F5E5D5C5B5A59585756555453525151504F4E4D4C4B4A49484746454443434241403F3E
3D3C3B3A39383737363534333231302F2E2D2C2C2B2A29282726252423232221201F1E1D1C1B1B1A
19181716151414131211100F0E0E0D0C0B0A09090807060505040302010100
>
0 %_Br
[
0 0 50 90 %_BS
%_0 0 50 90 Bs
1 0 48 0 %_BS
%_1 0 48 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_BS
%_0 1 0.6 0 1 50 100 Bs
0 0 1 0 1 50 0 %_BS
%_0 0 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_BS
%_0 0.08 0.67 0 1 50 14 Bs
1 1 0 0 1 50 100 %_BS
%_1 1 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
1 g
(K=0) Pc
0 g
(K=100) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.75 g
(K=25) Pc
0.5 g
(K=50) Pc
0.25 g
(K=75) Pc
0 g
(K=100) Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
(Black & White) Pc
0.25 0 0 0 k
(C=25 M=0 Y=0 K=0) Pc
0.5 0 0 0 k
(C=50 M=0 Y=0 K=0) Pc
0.75 0 0 0 k
(C=75 M=0 Y=0 K=0) Pc
1 0 0 0 k
(C=100 M=0 Y=0 K=0) Pc
0.25 0.25 0 0 k
(C=25 M=25 Y=0 K=0) Pc
0.5 0.5 0 0 k
(C=50 M=50 Y=0 K=0) Pc
0.75 0.75 0 0 k
(C=75 M=75 Y=0 K=0) Pc
1 1 0 0 k
(C=100 M=100 Y=0 K=0) Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
(Red & Yellow) Pc
0 0.25 0 0 k
(C=0 M=25 Y=0 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.75 0 0 k
(C=0 M=75 Y=0 K=0) Pc
0 1 0 0 k
(C=0 M=100 Y=0 K=0) Pc
0 0.25 0.25 0 k
(C=0 M=25 Y=25 K=0) Pc
0 0.5 0.5 0 k
(C=0 M=50 Y=50 K=0) Pc
0 0.75 0.75 0 k
(C=0 M=75 Y=75 K=0) Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
(Yellow & Blue Radial) Pc
0 0 0.25 0 k
(C=0 M=0 Y=25 K=0) Pc
0 0 0.5 0 k
(C=0 M=0 Y=50 K=0) Pc
0 0 0.75 0 k
(C=0 M=0 Y=75 K=0) Pc
0 0 1 0 k
(C=0 M=0 Y=100 K=0) Pc
0.25 0 0.25 0 k
(C=25 M=0 Y=25 K=0) Pc
0.5 0 0.5 0 k
(C=50 M=0 Y=50 K=0) Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0) Pc
1 0 1 0 k
(C=100 M=0 Y=100 K=0) Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Yellow Stripe) Pc
0.25 0.125 0 0 k
(C=25 M=13 Y=0 K=0) Pc
0.5 0.25 0 0 k
(C=50 M=25 Y=0 K=0) Pc
0.75 0.375 0 0 k
(C=75 M=38 Y=0 K=0) Pc
1 0.5 0 0 k
(C=100 M=50 Y=0 K=0) Pc
0.125 0.25 0 0 k
(C=13 M=25 Y=0 K=0) Pc
0.25 0.5 0 0 k
(C=25 M=50 Y=0 K=0) Pc
0.375 0.75 0 0 k
(C=38 M=75 Y=0 K=0) Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0.25 0.125 0 k
(C=0 M=25 Y=13 K=0) Pc
0 0.5 0.25 0 k
(C=0 M=50 Y=25 K=0) Pc
0 0.75 0.375 0 k
(C=0 M=75 Y=38 K=0) Pc
0 1 0.5 0 k
(C=0 M=100 Y=50 K=0) Pc
0 0.125 0.25 0 k
(C=0 M=13 Y=25 K=0) Pc
0 0.25 0.5 0 k
(C=0 M=25 Y=50 K=0) Pc
0 0.375 0.75 0 k
(C=0 M=38 Y=75 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0 0.25 0 k
(C=13 M=0 Y=25 K=0) Pc
0.25 0 0.5 0 k
(C=25 M=0 Y=50 K=0) Pc
0.375 0 0.75 0 k
(C=38 M=0 Y=75 K=0) Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0) Pc
0.25 0 0.125 0 k
(C=25 M=0 Y=13 K=0) Pc
0.5 0 0.25 0 k
(C=50 M=0 Y=25 K=0) Pc
0.75 0 0.375 0 k
(C=75 M=0 Y=38 K=0) Pc
1 0 0.5 0 k
(C=100 M=0 Y=50 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.25 0.125 0.125 0 k
(C=25 M=13 Y=13 K=0) Pc
0.5 0.25 0.25 0 k
(C=50 M=25 Y=25 K=0) Pc
0.75 0.375 0.375 0 k
(C=75 M=38 Y=38 K=0) Pc
1 0.5 0.5 0 k
(C=100 M=50 Y=50 K=0) Pc
0.25 0.25 0.125 0 k
(C=25 M=25 Y=13 K=0) Pc
0.5 0.5 0.25 0 k
(C=50 M=50 Y=25 K=0) Pc
0.75 0.75 0.375 0 k
(C=75 M=75 Y=38 K=0) Pc
1 1 0.5 0 k
(C=100 M=100 Y=50 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0.25 0.125 0 k
(C=13 M=25 Y=13 K=0) Pc
0.25 0.5 0.25 0 k
(C=25 M=50 Y=25 K=0) Pc
0.375 0.75 0.375 0 k
(C=38 M=75 Y=38 K=0) Pc
0.5 1 0.5 0 k
(C=50 M=100 Y=50 K=0) Pc
0.125 0.25 0.25 0 k
(C=13 M=25 Y=25 K=0) Pc
0.25 0.5 0.5 0 k
(C=25 M=50 Y=50 K=0) Pc
0.375 0.75 0.75 0 k
(C=38 M=75 Y=75 K=0) Pc
0.5 1 1 0 k
(C=50 M=100 Y=100 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0.125 0.25 0 k
(C=13 M=13 Y=25 K=0) Pc
0.25 0.25 0.5 0 k
(C=25 M=25 Y=50 K=0) Pc
0.375 0.375 0.75 0 k
(C=38 M=38 Y=75 K=0) Pc
0.5 0.5 1 0 k
(C=50 M=50 Y=100 K=0) Pc
0.25 0.125 0.25 0 k
(C=25 M=13 Y=25 K=0) Pc
0.5 0.25 0.5 0 k
(C=50 M=25 Y=50 K=0) Pc
0.75 0.375 0.75 0 k
(C=75 M=38 Y=75 K=0) Pc
1 0.5 1 0 k
(C=100 M=50 Y=100 K=0) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Layer 1) Ln
0 A
u
u
u
0 R
0 G
800 Ar
0 J 0 j 2.7812 w 4 M []0 d
%AI3_Note:
0 D
0 XR
300.0903 265.7822 m
369.6396 262.1079 429.002 315.5156 432.6763 385.0654 c
436.3501 454.6152 382.9453 513.9775 313.3955 517.6514 c
243.8428 521.3252 184.481 467.9204 180.8066 398.3682 c
177.1328 328.8184 230.5405 269.4561 300.0903 265.7822 c
s
306.7427 391.7183 m
S
U
u
306.7427 294.4868 m
360.4395 294.4868 403.9712 338.0186 403.9712 391.7183 c
403.9712 445.415 360.4395 488.9463 306.7427 488.9463 c
253.043 488.9463 209.5117 445.415 209.5117 391.7183 c
209.5117 338.0186 253.043 294.4868 306.7427 294.4868 c
s
306.7427 391.7183 m
S
U
U
u
1.0569 w
320.4209 474.373 m
319.542 464.3242 322.501 461.0342 v
325.4604 457.7441 325.0933 450.8022 y
325.9888 441.3545 327.7051 440.915 v
S
290.9287 469.6646 m
290.4336 466.9053 l
282.9077 476.0054 293.4316 477.541 v
303.959 479.0732 301.3447 475.73 y
307.1738 474.0278 306.5146 468.146 v
300.0649 471.272 l
290.0527 472.8433 290.9287 469.6646 v
306.9878 475.3716 300.8662 456.7817 v
295.6816 441.04 290.292 441.1514 y
297.0254 440.1001 300.7715 445.123 v
300.1514 439.9331 299.7676 439.2573 v
299.3838 438.5815 305.6499 438.5981 307.48 446.8584 c
310.7114 442.1611 310.5474 439.0376 v
310.3809 435.9116 315.7012 444.3359 315.1533 447.1475 c
314.605 449.9624 319.5728 438.5591 317.1445 438.687 c
314.7139 438.8179 324.1226 439.0156 323.1382 446.7275 c
322.4595 440.498 330.4277 439.7275 v
325.8247 444.8447 325.0044 455.6802 v
324.1836 466.5161 318.6689 480.7334 316.1265 478.7783 c
299.1167 486.2905 298.9692 476.8984 v
S
293.0288 469.9009 m
300.4854 472.6401 305.2881 464.7275 v
S
297.8901 469.645 m
312.041 469.7925 293.3179 442.3833 v
S
320.3486 472.9849 m
323.7251 457.8359 325.0601 456.7207 v
S
319.0664 468.5269 m
324.8037 458.4756 325.0044 455.6802 v
325.2046 452.8853 321.3301 458.6592 y
323.9058 454.6934 326.4282 449.687 v
S
305.0488 453.6001 m
303.1299 450.2207 l
303.2412 452.3042 l
S
313.0342 453.1802 m
312.8506 449.7065 l
312.2109 450.7856 l
S
300.0649 477.8857 m
307.1016 479.2539 311.9077 477.9551 v
316.7109 476.6592 306.2979 477.2095 y
306.1699 474.7788 l
304.4316 474.8706 l
301.3447 475.73 l
300.0649 477.8857 l
s
313.6206 464.2881 m
314.2437 462.8643 l
S
312.3413 459.8301 m
312.9614 458.4063 l
S
302.1318 477.4297 m
304.4316 474.8706 l
305.3105 478.3057 l
S
U
2.7812 w
259.4092 426.5947 m
355.8311 426.375 l
354.6689 364.8154 l
349.7461 324.3433 308.5396 302.1519 v
267.7949 321.7095 259.5264 369.4937 v
259.4092 426.5947 l
s
0 O
0 g
350.5889 425.9546 m
305.7026 380.2847 l
310.1416 378.6577 l
295.1367 358.2129 l
299.6313 357.626 l
283.6196 331.3184 l
315.604 363.397 l
308.3506 364.479 l
330.8281 388.0078 l
328.1245 389.543 l
355.2832 415.959 l
355.0469 424.6753 l
350.5889 425.9546 l
f
281.353 416.9048 m
281.4531 418.8154 283.9204 419.3799 v
284.3403 420.751 l
285.4277 418.2563 283.4448 416.9688 v
281.4614 415.6812 282.8325 415.2612 y
286.2593 417.5166 287.4551 417.105 v
286.8237 415.0498 285.7197 413.8901 v
284.6128 412.73 286.6709 415.4058 288.3589 414.4463 c
290.0498 413.4868 290.1865 416.0898 290.8262 415.0137 c
290.8623 412.3994 288.0947 412.7192 v
287.0073 411.9067 l
288.8428 410.4189 290.9453 410.6553 v
293.0454 410.8916 288.4033 408.7002 y
288.3032 406.7896 291.0542 406.1221 v
293.8047 405.4546 286.1841 406.2056 285.8643 406.7451 c
285.5444 407.2847 288.4951 403.8218 287.8999 402.459 c
287.7832 403.5107 286.2119 403.4189 v
284.6406 403.3296 283.8618 405.1094 y
286.0645 400.6431 284.9854 400.0034 v
283.9092 399.3638 285.561 401.0186 283.478 401.127 c
282.7852 401.1631 282.4375 404.4893 y
280.958 402.8262 280.6104 399.5391 v
280.2627 396.2485 279.6147 403.769 y
276.3525 401.3301 276.5889 399.2275 v
276.8281 397.1274 275.2236 400.3564 276.856 404.2612 c
277.8516 406.6475 273.5938 401.8223 y
275.5767 406.4194 l
270.1143 405.1401 l
270.3477 407.3154 274.8203 408.5474 v
275.8799 408.8394 270.6899 409.4624 y
273.0205 410.7305 l
271.7578 413.2334 268.9546 412.8608 v
266.1484 412.4854 271.1738 415.3555 272.1807 414.6045 c
273.1846 413.8564 273.6689 413.1333 274.7119 413.0776 c
275.752 413.0249 272.6563 417.0161 y
274.6279 417.2051 276.5391 414.7246 v
277.5151 413.4531 276.5029 420.6426 y
277.9102 417.6113 l
278.7861 417.7363 l
279.8652 421.6831 l
281.353 416.9048 l
f
u
0 R
0 G
0.3476 w
311.3486 413.0415 m
316.9805 413.2417 321.5918 412.085 321.6499 410.458 c
321.7085 408.8281 317.1919 407.3457 311.5596 407.1455 c
305.9307 406.9424 301.3169 408.0996 301.2583 409.729 c
301.1997 411.3564 305.7192 412.8384 311.3486 413.0415 c
s
311.4541 410.0938 m
S
U
u
314.4053 410.0938 m
314.4023 404.459 313.0811 399.8921 311.4541 399.8921 c
309.8242 399.8921 308.5034 404.459 308.5059 410.0938 c
308.5059 415.7285 309.8271 420.2949 311.457 420.2949 c
313.0869 420.2949 314.4053 415.7285 314.4053 410.0938 c
s
311.4541 410.0938 m
S
U
u
313.71 408.1943 m
310.0801 403.8833 306.1284 401.2412 304.8823 402.2925 c
303.6362 403.3408 305.5693 407.6851 309.1987 411.9932 c
312.8311 416.3042 316.7832 418.9434 318.0288 417.895 c
319.2749 416.8462 317.3418 412.502 313.71 408.1943 c
s
311.4541 410.0938 m
S
U
u
309.3096 408.0688 m
305.4414 412.1655 303.269 416.396 304.4541 417.5137 c
305.6387 418.6318 309.7324 416.2148 313.6011 412.1182 c
317.4673 408.0186 319.6421 403.7915 318.4575 402.6733 c
317.2725 401.5552 313.1758 403.9722 309.3096 408.0688 c
s
311.4541 410.0938 m
S
U
u
0 O
0 g
311.3901 408.8672 m
312.0688 408.8311 312.6475 409.3511 312.6807 410.0298 c
312.7168 410.7056 312.1968 411.2837 311.521 411.3203 c
310.8423 411.3564 310.2637 410.8359 310.2275 410.1577 c
310.1914 409.479 310.7114 408.9004 311.3901 408.8672 c
b
311.4541 410.0938 m
B
U
u
1.0569 w
278.5327 432.7217 m
275.5767 438.3813 277.7207 437.1157 v
279.6621 435.9673 283.4751 430.7188 284.8545 430.4717 c
286.2339 430.2241 281.4697 430.6523 280.5547 429.8291 c
279.6426 429.0059 276.6499 430.0352 y
274.5225 432.585 l
278.1494 428.7388 273.1792 430.2183 v
266.7935 432.9053 268.9209 436.9712 v
275.5791 441.0566 278.5327 432.7217 v
s
291.8384 432.5405 m
286.5596 437.7388 289.6855 437.875 v
295.9658 438.1533 296.3496 431.2642 295.209 430.4463 c
294.7588 430.124 294.3247 430.146 292.8452 430.1377 c
291.6157 430.1294 288.6816 430.4438 y
288.0171 432.6548 l
290.4087 428.5244 285.439 430.0073 v
276.4751 436.9155 280.6997 437.48 v
286.187 440.8457 291.8384 432.5405 v
s
304.4263 433.5278 m
300.2373 438.2759 303.6113 437.9224 v
306.0864 437.6636 310.1138 432.5684 309.2764 431.4448 c
308.9009 430.9414 308.7231 430.8638 306.79 430.5327 c
305.5801 430.3242 303.2188 430.4604 y
300.4126 433.3916 l
306.3115 427.2427 297.3311 431.0303 v
294.5083 433.6172 294.1826 437.377 v
300.9048 439.3716 304.4263 433.5278 v
s
317.8091 433.1694 m
314.0547 437.8945 317.3394 437.4609 v
319.8062 437.1328 325.7915 431.6089 324.8931 430.5327 c
324.6147 430.1992 320.1787 430.085 318.9497 430.0625 c
317.7314 430.0405 316.7998 430.5244 y
313.9961 433.4585 l
318.8828 428.7607 312.5083 430.0571 v
307.3633 433.1138 307.2905 436.6846 v
314.3301 439.7939 317.8091 433.1694 v
s
332.1494 432.7603 m
327.1484 438.5957 331.3369 437.1548 v
333.6899 436.3452 338.4126 432.4185 338.585 431.0278 c
338.7656 429.54 335.6343 431.1836 334.1294 430.7412 c
332.9502 430.3936 329.8462 430.3574 y
328.1387 432.624 l
331.2646 429.2393 326.2949 430.7188 v
317.4893 437.0156 320.7881 436.8433 v
328.3442 439.8389 332.1494 432.7603 v
s
343.9888 434.4849 m
338.3901 438.8706 343.0767 438.623 v
345.5601 438.4927 348.6777 433.7979 348.4053 432.4238 c
348.2856 431.8203 348.0938 431.4839 347.1816 430.6606 c
346.2666 429.8403 342.9932 430.4463 y
338.5903 434.4238 l
345.374 428.8643 339.4331 430.6357 v
331.3457 437.3301 333.0112 437.5884 v
339.4302 440.4702 343.9888 434.4849 v
s
U
u
0.3476 w
307.252 416.1929 m
307.6577 416.1704 308.0054 416.4819 308.0249 416.8882 c
308.0474 417.2939 307.7358 417.6421 307.3296 417.6641 c
306.9238 417.686 306.5757 417.3721 306.5537 416.9658 c
306.5313 416.5596 306.8457 416.2124 307.252 416.1929 c
s
307.2905 416.9268 m
S
U
u
311.2065 400.1313 m
309.8716 401.1157 308.9595 405.3628 308.9341 410.2549 c
308.9063 415.5366 309.9717 419.7583 311.457 420.2866 c
S
U
u
318.1152 402.5952 m
316.4688 402.4009 312.895 404.8677 309.5269 408.4136 c
305.8892 412.2437 303.7725 416.0479 304.4902 417.4526 c
S
U
u
321.439 410.1992 m
320.5015 408.8311 316.2905 407.7686 311.4043 407.5684 c
306.1255 407.3511 301.8701 408.2637 301.2861 409.729 c
S
U
u
318.1958 417.5195 m
318.5713 415.9038 316.5132 412.082 313.3647 408.3384 c
309.9609 404.2974 306.4146 401.772 304.9404 402.3311 c
S
U
u
0.1725 w
287.3882 356.5332 m
289.3545 357.4731 l
289.3989 351.7271 l
273.4019 352.0498 l
273.502 353.9604 l
277.4956 353.749 l
277.2397 352.1943 l
S
276.2163 359.2114 m
285.4082 358.5522 l
S
274.8813 353.7129 m
278.7695 384.4927 l
282.4155 384.2979 l
285.9365 352.083 l
S
276.5835 372.7695 m
284.7432 372.3384 l
285.0547 374.9336 l
283.3364 375.373 l
283.4473 374.1494 l
276.4941 374.3413 l
276.5835 372.7695 l
s
276.3276 364.6011 m
284.4961 364.3452 l
S
276.9673 370.1387 m
283.9116 369.7715 l
S
278.853 386.0527 m
283.3945 386.3364 l
283.6226 384.0615 l
278.7695 384.4927 l
278.853 386.0527 l
s
279.3838 386.2002 m
279.4287 387.0679 l
280.3965 388.9316 l
281.584 388.3472 l
281.6479 386.2529 l
S
280.1182 357.2646 m
281.167 357.3838 l
280.8833 352.0024 l
279.832 351.8857 l
280.1182 357.2646 l
s
278.6885 382.9297 m
282.6714 382.5454 l
S
279.832 351.8857 m
280.3965 388.9316 l
S
285.6084 355.7568 m
279.9902 361.4502 l
275.1841 356.1323 l
289.0879 355.7461 l
283.0415 356.5889 l
283.1416 351.8828 l
S
276.4834 367.5522 m
284.2959 367.1406 l
279.9902 361.4502 l
276.4834 367.5522 l
s
276.4834 367.5522 m
280.0459 372.4136 l
284.2959 367.1406 l
S
283.1997 376.0767 m
280.0459 372.4136 l
277.8267 376.5327 l
283.1997 376.0767 l
280.1406 380.7632 l
277.8267 376.5327 l
S
280.1406 380.7632 m
278.6885 382.9297 l
280.252 386.1528 l
282.1792 383.0938 l
280.1406 380.7632 l
s
280.3325 384.4092 m
278.5771 380.8462 l
282.9272 380.791 l
S
280.4243 382.8379 m
278.2939 378.7715 l
282.8242 378.8799 l
280.4131 376.0488 l
277.2788 372.7334 l
279.9653 367.5439 l
283.5278 372.4023 l
280.4131 376.0488 l
S
280.1406 380.7632 m
S
284.8521 361.1943 m
279.9653 367.5439 l
276.0078 361.834 l
284.8521 361.1943 l
279.8872 356.2329 l
276.0078 361.834 l
S
280.4131 376.0488 m
278.2939 378.7715 l
S
276.458 373.646 m
284.6157 373.2173 l
285.2554 375.4453 l
284.2959 373.7544 l
284.0952 376.5522 l
284.2959 373.7544 l
S
u
278.8335 385.7051 m
283.6865 385.2769 l
S
U
278.7969 385.0127 m
279.3286 385.1572 283.8228 384.5732 y
S
U
327.8994 352.3057 m
328.4194 352.2778 341.4829 352.4585 y
S
338.8716 352.4224 m
336.3794 367.8721 l
332.377 367.9082 l
330.6948 352.5059 l
S
0 O
0 g
331.7349 352.4502 m
333.2559 368.0361 l
B
337.6367 352.1387 m
335.356 368.2725 l
B
334.8608 352.2861 m
334.3159 368.3281 l
B
332.085 365.6611 m
336.9634 365.75 l
B
331.9932 363.9253 m
336.8716 364.0146 l
B
330.8394 355.2813 m
338.8438 355.2065 l
B
332.1406 366.7012 m
336.3237 366.8291 l
B
347.5625 375.2866 m
348.0381 371.0845 l
338.1343 374.7417 l
B
u
u
336.8022 375.3091 m
342.5928 375.5732 l
342.6509 374.7334 l
336.8022 375.3091 l
b
U
u
335.2061 377.0083 m
335.3447 382.8042 l
336.1846 382.8018 l
335.2061 377.0083 l
b
U
u
333.209 375.4204 m
327.4155 375.5259 l
327.4126 376.3687 l
333.209 375.4204 l
b
U
u
334.7104 373.4985 m
333.9985 367.7466 l
333.1616 367.8306 l
334.7104 373.4985 l
b
U
u
335.459 373.4902 m
337.4224 368.0361 l
336.6353 367.7329 l
335.459 373.4902 l
b
U
u
336.0176 373.749 m
340.4814 370.0498 l
339.959 369.3906 l
336.0176 373.749 l
b
U
u
336.5991 374.3662 m
342.0669 372.439 l
341.8027 371.6377 l
336.5991 374.3662 l
b
U
u
336.4932 376.1797 m
341.5273 379.0469 l
341.9614 378.3267 l
336.4932 376.1797 l
b
U
u
335.8232 376.7915 m
338.8853 381.7114 l
339.6084 381.2832 l
335.8232 376.7915 l
b
U
u
333.9487 373.7739 m
330.2773 369.2876 l
329.6157 369.8047 l
333.9487 373.7739 l
b
U
u
333.3145 374.4609 m
328.0469 372.041 l
327.6768 372.7974 l
333.3145 374.4609 l
b
U
u
333.5063 376.2881 m
328.3501 378.9355 l
328.7202 379.6924 l
333.5063 376.2881 l
b
U
u
334.1738 376.73 m
331.5347 381.8921 l
332.2773 382.2925 l
334.1738 376.73 l
b
U
338.7822 378.6743 m
337.2363 377.4507 l
B
340.4063 376.4995 m
338.2041 376.0073 l
B
340.1816 373.8989 m
338.0371 374.4497 l
B
339.8169 371.9189 m
337.7061 373.1592 l
B
337.9897 370.272 m
336.6187 372.3467 l
B
335.1836 369.8994 m
335.1309 372.166 l
B
332.8779 370.7173 m
333.5757 372.4219 l
B
329.8604 374.5332 m
331.6987 374.7832 l
B
329.4849 377.3364 m
331.9517 376.249 l
B
331.0977 379.8618 m
332.9751 377.5005 l
B
334.1709 380.396 m
334.4185 378.4683 l
B
U
u
337.375 366.9487 m
337.4111 367.6411 L
331.8574 367.936 L
331.8208 367.2407 L
337.375 366.9487 L
b
334.6162 367.4409 m
B
U
347.354 374.6025 m
338.0371 374.4497 l
345.8745 376.2461 l
348.3135 379.6001 l
347.354 374.6025 l
b
0.6953 w
300.2793 392.9277 m
S
u
0.172 w
298.6587 327.334 m
303.7954 327.1196 l
S
317.8267 340.8311 m
314.8008 351.2607 311.7085 340.9009 v
310.0869 335.4746 311.6914 328.2852 y
S
313.0625 327.9878 m
312.7847 330.207 313.0708 328.1572 312.7261 331.2861 c
S
312.5479 333.2749 m
312.3535 335.3525 312.5093 337.5132 312.9404 339.5908 c
S
313.3408 341.2959 m
313.6357 342.3608 314.0806 343.4736 314.7676 343.9463 c
S
315.627 342.7505 m
315.7437 342.8169 314.8677 342.8589 314.2334 341.0508 c
S
313.8105 339.4878 m
313.6997 338.6089 313.7021 337.9556 313.7134 338.1919 c
313.6104 336.2393 313.5493 334.6572 313.7329 333.2134 c
S
313.9497 331.3916 m
314.0972 328.8662 314.5171 327.7124 y
S
316.2861 327.4204 m
315.4463 330.8022 315.2988 336.0728 y
315.4712 343.5874 317.6851 341.0649 y
318.0327 340.6641 318.3218 339.4766 v
S
311.853 341.5156 m
307.7813 341.5601 l
307.7202 340.375 l
311.5884 340.2559 l
S
307.3779 327.4951 m
308.1733 336.1089 l
S
319.5542 341.6602 m
320.1411 341.6489 l
320.4717 340.5361 l
319.1895 340.6201 l
319.5542 341.6602 l
s
320.4717 340.5361 m
321.1812 340.3003 321.1338 339.4126 v
318.5361 339.5352 l
318.4194 340.5308 319.1895 340.6201 v
S
321.1338 339.4126 m
321.8149 338.8789 321.6313 337.8579 v
317.8296 338.1724 l
317.7241 339.3877 318.5361 339.5352 v
S
310.7124 335.9751 m
309.9004 327.0225 l
311.3242 328.3047 l
310.3008 334.6377 310.7124 335.9751 v
s
u
300.1885 330.2319 m
299.2344 330.4072 298.7173 332.2427 299.0981 334.3262 c
299.4653 336.3311 300.2661 337.6855 301.415 337.7661 c
S
303.5342 331.8008 m
303.0225 330.5771 302.2856 329.9399 301.5928 330.0459 c
300.8447 330.1597 300.1719 332.0508 300.5527 334.1338 c
300.9336 336.2173 301.7485 337.8721 302.9697 337.5913 c
303.395 337.4937 303.8291 336.8765 304.1045 335.6499 c
S
U
302.2827 333.8169 m
S
297.1401 335.9365 m
296.5898 335.9502 296.1191 335.0879 296.0889 334.0059 c
296.0557 332.9268 296.4785 332.0371 297.0288 332.0229 c
S
297.0845 335.939 m
299.5293 335.8169 l
S
296.9731 332.0259 m
299.126 331.8926 l
S
301.3594 337.769 m
302.8223 337.6079 l
S
300.1885 330.2319 m
301.6709 330.0317 l
S
302.6416 335.7417 m
302.1021 335.8447 301.498 335.0659 301.3008 334.0005 c
301.1006 332.938 301.5513 331.9785 302.0938 331.8755 c
S
302.6416 335.7417 m
302.7944 335.7334 l
S
302.7944 335.7334 m
302.7944 335.7334 l
S
302.7944 335.7334 m
304.1045 335.6499 l
S
304.1045 335.6499 m
304.5825 335.6191 l
S
302.0938 331.8755 m
304.3242 331.7866 l
S
317.0229 342.9951 m
316.2891 345.3228 315.0371 346.0986 v
S
313.7637 346.6328 m
313.5913 346.6689 313.5352 346.6855 313.3438 346.6968 c
S
313.0181 346.7109 m
312.6899 346.7163 312.334 346.6831 311.9531 346.6021 c
305.103 345.437 304.6914 337.6494 v
304.2798 329.8652 304.1016 329.7065 y
298.6587 327.334 l
298.2998 322.7144 l
323.0107 321.4072 l
326.7798 328.5078 l
326.835 330.5962 l
S
307.7505 341.4766 m
311.7612 341.3511 l
S
312.8789 346.4688 m
313.5352 348.6602 314.1499 346.4297 v
314.2197 346.1714 313.8052 346.3628 y
313.6802 347.1611 313.5327 347.0835 v
313.3882 347.0054 313.21 346.3101 y
312.832 346.1016 312.8789 346.4688 v
s
314.1055 346.6577 m
314.6479 347.8369 315.043 346.2129 v
315.1011 345.9736 314.8647 346.1631 314.7871 346.2324 c
S
314.7871 346.2324 m
314.7729 346.2461 314.7622 346.2544 y
314.5869 346.6885 l
S
314.6201 346.772 m
314.4033 346.4355 l
S
314.7622 346.2544 m
314.4033 346.4355 l
314.3726 346.3882 l
314.1499 346.4297 l
S
314.3447 344.75 m
314.9736 345.2173 315.3433 344.9502 v
316.9258 343.8208 317.3179 341.624 y
316.5254 341.6069 l
315.9077 344.8501 314.3447 344.75 v
s
316.5254 341.6069 m
315.8604 341.8687 l
S
314.7676 343.9463 m
316.1748 342.3135 315.8604 341.8687 y
315.1875 341.4238 314.9316 340.3335 v
S
314.7676 343.9463 m
314.6284 344.0659 314.4702 344.1855 314.292 344.2993 c
314.3447 344.75 l
S
314.8647 340.4336 m
314.4478 340.8867 313.8833 341.3848 313.4575 341.3457 c
312.6675 341.2705 312.27 340.8423 y
311.9111 339.4185 l
312.7734 340.1943 313.2212 340.0859 v
313.666 339.9775 314.6895 339.499 315.2461 338.8174 c
315.438 339.7412 l
315.1987 340.0718 314.8647 340.4336 v
S
315.2461 338.8174 m
314.6816 338.8481 l
313.2212 340.1138 313.3071 339.6963 313.1128 339.6382 c
312.7954 339.5405 312.4146 339.2793 y
311.9111 339.4185 l
S
315.3071 333.5249 m
315.4238 332.0205 l
313.5186 330.7798 311.7305 331.6782 v
311.4663 333.1357 l
313.9609 332.1538 315.3071 333.5249 v
s
315.3071 333.5249 m
314.709 333.4722 l
313.6968 332.8105 312.0391 333.2749 v
311.4663 333.1357 l
S
314.6816 338.8481 m
314.3115 336.1255 314.709 333.4722 v
S
323.748 329.7344 m
323.0332 329.8652 322.6436 331.2417 322.9302 332.8047 c
323.2056 334.3091 323.8066 335.3247 324.6689 335.3857 c
S
326.187 330.688 m
325.8062 329.7705 325.3223 329.5146 324.8022 329.5952 c
324.2402 329.6816 323.7368 331.0996 324.0205 332.6602 c
324.3071 334.2231 324.9189 335.4634 325.834 335.2549 c
326.1538 335.1797 326.479 334.7183 326.6851 333.7974 c
S
324.6689 335.3857 m
325.6948 335.269 l
S
323.7871 329.6563 m
324.8022 329.5952 l
S
327.9614 332.1509 m
S
u
327.6333 333.7168 m
328.0923 333.6641 328.3818 332.9189 328.2788 332.0566 c
328.1758 331.1943 327.7197 330.541 327.2607 330.5938 c
326.8018 330.6494 326.5098 331.3916 326.6128 332.2539 c
326.7158 333.1191 327.1719 333.7725 327.6333 333.7168 c
S
327.5723 333.7197 m
326.251 333.8418 l
325.7896 333.8975 325.3335 333.2412 325.2305 332.3794 c
325.1274 331.5171 325.417 330.7744 325.8784 330.7188 c
327.2607 330.5938 l
S
U
326.1177 332.3149 m
S
323.5059 334.5347 m
321.9263 334.5898 321.8428 334.6235 v
321.7207 334.6709 320.8809 334.5151 320.6665 332.7324 c
320.4912 331.2554 321.4175 330.5464 321.334 330.5576 c
323.064 330.4575 l
S
322.7803 330.4155 m
322.4634 329.2446 321.9878 327.9043 321.1338 328.1543 c
320.0742 328.4658 319.4287 330.7046 319.5928 333.272 c
319.7124 335.1353 320.647 337.5244 321.9233 337.2212 c
322.6216 337.0542 322.9805 335.8364 323.1416 334.6123 c
S
321.4868 332.7461 m
S
u
323.0947 335.2939 m
322.438 338.481 321.0195 337.7773 v
320.5552 337.5493 319.4707 336.8706 318.9644 332.627 c
318.8447 329.2393 320.0464 327.9292 v
321.4092 326.4443 321.9292 328.2632 322.0156 328.2769 c
322.2739 328.3213 322.7803 330.4155 y
S
U
314.7871 331.7144 m
314.8594 329.3643 315.3628 327.6123 v
S
320.978 327.3564 m
317.8296 327.7568 l
317.5459 327.7065 317.1841 327.8345 316.7285 328.3296 c
315.5269 329.6396 315.6494 333.0273 y
316.1553 337.2715 317.4209 337.9526 317.8853 338.1836 c
321.5034 337.8804 l
S
318.0688 339.2485 m
317.6157 341.0981 316.937 340.8369 v
315.7993 340.7119 315.8188 335.7471 v
315.8105 333.981 l
S
317.2983 337.7495 m
320.5024 337.3965 l
320.2021 337.0293 l
316.9507 337.3716 l
317.2983 337.7495 l
s
316.2192 335.8252 m
319.4814 335.4551 l
319.3369 334.8403 l
316.0747 335.2104 l
316.2192 335.8252 l
s
315.6855 333.2217 m
319.0088 332.9355 l
318.9644 332.0869 l
315.6465 332.4624 l
315.6855 333.2217 l
s
315.855 330.5269 m
319.1509 330.2686 l
319.2593 329.6396 l
316.0386 329.7261 l
315.855 330.5269 l
s
319.6763 328.4575 m
316.4893 328.6274 l
317.1064 327.9985 l
320.2046 327.7515 l
319.6763 328.4575 l
s
322.7466 334.604 m
322.4492 336.4868 321.8848 336.5146 v
321.2925 336.5483 320.1963 336.1255 320.1016 332.7627 c
319.999 328.9751 321.4619 329.0415 y
321.9736 329.0723 322.271 330.4155 v
S
311.3242 328.3047 m
316.4277 327.4702 l
317.1064 327.9985 l
S
307.5449 329.5786 m
307.4282 335.9224 l
306.3486 327.2671 l
307.4727 328.1685 l
S
305.064 336.1587 m
303.8486 327.0586 303.7954 327.1196 v
S
306.3486 327.2671 m
306.0039 327.1895 305.9624 326.3828 v
305.9175 325.5347 305.8594 322.314 y
S
309.9004 327.0225 m
309.5581 326.9727 309.5249 326.3633 v
309.4917 325.7432 309.3579 322.1304 y
S
323.0107 321.4072 m
322.8164 326.2827 322.9834 326.2188 v
309.8252 326.686 l
S
322.9834 326.2188 m
325.0244 329.5615 l
S
U
u
2 To
0.9363 0 0 0.9363 -4014 4716 1 Tp
0 Tv
0.9363 w
203.3188 391.8047 m
203.3188 448.7534 249.4868 494.9214 306.4355 494.9214 c
363.3843 494.9214 409.5518 448.7534 409.5518 391.8047 c
409.5518 334.856 363.3843 288.6885 306.4355 288.6885 c
249.4868 288.6885 203.3188 334.856 203.3188 391.8047 c
n
TP
0.2295 0.9077 -0.9077 0.2295 204.3882 408.9634 Tm
0 Tr
0 O
0 g
1 w
%_ 0 50 XQ
/_Times-Bold 25 23.3749 -5.4501 Tf
0 Ts
100 100 Tz
-20 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
1 Ta
0 1 2 2 99 Th
0 Tq
240 Tg
25 0 Tl
-0.5 Tc
0 Tw
(D) Tx 
0.3609 0.8639 -0.8639 0.3609 208.2388 424.3232 Tm
(E) Tx 
0.4743 0.8073 -0.8073 0.4743 213.8438 437.8008 Tm
(P) Tx 
0.5829 0.7327 -0.7327 0.5829 220.4336 449.3364 Tm
(A) Tx 
0.6872 0.6359 -0.6359 0.6872 230.2192 461.769 Tm
(R) Tx 
0.7726 0.5288 -0.5288 0.7726 241.8223 472.5483 Tm
(T) Tx 
0.8516 0.3891 -0.3891 0.8516 253.5806 481.0522 Tm
(M) Tx 
0.9057 0.2376 -0.2376 0.9057 272.647 489.5723 Tm
(E) Tx 
0.9307 0.1018 -0.1018 0.9307 286.6929 493.3848 Tm
(N) Tx 
0.9357 -0.0341 0.0341 0.9357 302.4551 495.1357 Tm
(T) Tx 
0.9095 -0.2225 0.2225 0.9095 322.1772 494.1357 Tm
(O) Tx 
0.8667 -0.3542 0.3542 0.8667 338.8022 490.002 Tm
(F) Tx 
0.7863 -0.5083 0.5083 0.7863 355.7842 482.7041 Tm
(E) Tx 
0.7036 -0.6177 0.6177 0.7036 368.083 474.8999 Tm
(N) Tx 
0.6062 -0.7136 0.7136 0.6062 380.0059 464.4746 Tm
(E) Tx 
0.4954 -0.7945 0.7945 0.4954 389.5293 453.4565 Tm
(R) Tx 
0.3628 -0.8631 0.8631 0.3628 398.0088 440.126 Tm
(G) Tx 
0.2205 -0.91 0.91 0.2205 404.6646 424.3887 Tm
(Y) Tx 
( DEPARTMENT OF ENERGY \r) TX 
TO
0 To
0.9271 0 0 0.9271 196.1235 390.4141 0 Tp
0 Tv
TP
-4.5499 0 Td
0 Tr
/_Times-Bold 26 24.3099 -5.6681 Tf
26 0 Tl
-0.52 Tc
(\245) Tx 
(\r) Tx 
TO
0 To
0.9271 0 0 0.9271 417.2295 390.4141 0 Tp
0 Tv
TP
-4.5499 0 Td
0 Tr
(\245) Tx 
(\r) Tx 
TO
2 To
1.0795 0 0 1.0811 -4014 4716 0.0002 Tp
0 Tv
1.0898 w
306.5 273.437 m
372.1592 273.437 425.3887 326.7441 425.3887 392.5 c
425.3887 458.2559 372.1592 511.563 306.5 511.563 c
240.8403 511.563 187.6113 458.2559 187.6113 392.5 c
187.6113 326.7441 240.8403 273.437 306.5 273.437 c
n
TP
0.1371 -1.0723 1.0708 0.1373 187.5273 385.4619 Tm
0 Tr
0 O
0 g
1 w
/_Times-Bold 21.266 19.8837 -4.636 Tf
21.266 0 Tl
-0.4253 Tc
(U) Tx 
0.296 -1.0397 1.0381 0.2965 189.8828 367.7671 Tm
(N) Tx 
0.4133 -0.9987 0.9973 0.4139 194.9116 351.083 Tm
(I) Tx 
0.5193 -0.9478 0.9464 0.5201 198.5166 342.0317 Tm
(T) Tx 
0.6444 -0.8674 0.8661 0.6453 206.4839 327.6519 Tm
(E) Tx 
0.7612 -0.7666 0.7654 0.7623 216.356 314.4292 Tm
(D) Tx 
0.8851 -0.6189 0.618 0.8864 233.2866 298.4683 Tm
(S) Tx 
0.9559 -0.5024 0.5016 0.9573 244.5513 290.5688 Tm
(T) Tx 
1.0182 -0.3591 0.3585 1.0197 259.1855 282.9219 Tm
(A) Tx
1.0593 -0.208 0.2077 1.0609 275.98 277.1401 Tm
(T) Tx
1.0778 -0.0604 0.0603 1.0794 292.1094 274.0537 Tm
(E) Tx
1.077 0.073 -0.0729 1.0786 308.2808 273.2808 Tm
(S) Tx
1.0447 0.2721 -0.2717 1.0463 327.8657 275.0117 Tm
(O) Tx 
0.9946 0.4203 -0.4197 0.996 346.2251 280.0249 Tm
(F) Tx 
0.8998 0.5972 -0.5964 0.9012 365.1851 288.5981 Tm
(A) Tx 
0.7841 0.7431 -0.742 0.7853 380.3311 298.5474 Tm
(M) Tx 
0.6506 0.8627 -0.8614 0.6515 396.8179 314.6948 Tm
(E) Tx 
0.5206 0.9471 -0.9457 0.5213 406.7275 327.8994 Tm
(R) Tx 
0.4098 1.0002 -0.9987 0.4104 414.8389 343.1924 Tm
(I) Tx 
0.2922 1.0407 -1.0392 0.2926 418.7197 352.2153 Tm
(C) Tx 
0.1332 1.0728 -1.0713 0.1334 423.4531 369.4292 Tm
(A) Tx 
(UNITED STATES OF AMERICA\r) TX 
TO
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
