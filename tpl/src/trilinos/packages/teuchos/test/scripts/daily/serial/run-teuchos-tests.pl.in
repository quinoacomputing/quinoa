#!/usr/bin/perl -w
use strict;
use strict 'refs';
# ************************************************************************
# 
#                    Teuchos: Common Tools Package
#                 Copyright (2004) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************
#
# Once created by 'configure' this perl script can be run from anywhere!
#

printf
  "\n************************************************************".
  "\n*** Running Teuchos serial tests (no news is good news) ****".
  "\n************************************************************\n";

my $ierr = 0;
my $top_build_dir = remove_rel_paths("@abs_top_builddir@");
my $test_dir = "${top_build_dir}/test";

run_test("$test_dir/RCP/RefCountPtr_test.exe","--quiet","--verbose");
run_test("$test_dir/Workspace/workspace_test.exe","--quiet","--verbose");
run_test("$test_dir/dyn_cast/dyn_cast_test.exe","--quiet","--verbose");
run_test("$test_dir/BLAS/BLAS_test.exe","","-v");
run_test("$test_dir/LAPACK/LAPACK_test.exe","","-v");
run_test("$test_dir/DenseMatrix/DenseMatrix_test.exe","","-v");
run_test("$test_dir/ParameterList/ParameterList_test.exe","","-v");
run_test("$test_dir/Polling/Polling_test.exe","","-v");
run_test("$test_dir/Time/Time_test.exe","","-v");

if($ierr) {
  print "\n***\n*** Oh no, at least one of the teuchos testing programs failed!\n***\n";
}
else {
  print "\n***\n*** Congratulations, All tests in the teuchos collection seemed to have passed!\n***\n";
}

exit($ierr);

#
# Subroutines
#
sub run_test {
  my $cmnd = shift;
  my $quiet = shift;
  my $verbose = shift;
  my $cmnd_quiet = "$cmnd $quiet";
  print
    "\n****************************************************\n",
    "Running the following testing program in quiet mode:\n\n",
    "$cmnd_quiet ...\n";
  my $iresult = system($cmnd_quiet);
  $ierr += $iresult;
  print "\nThe above testing program passed!\n" if($iresult==0);
  print "\nThe above testing program failed!\n" if($iresult!=0);
  if($iresult!=0) {
    my $cmnd_verbose = "$cmnd $verbose";
    print
      "\n***************************************************\n",
      "Rerunning the this testing program in verbose mode:\n\n",
      "$cmnd_verbose ...\n";
    system($cmnd_verbose);
  }
}
#
sub remove_rel_paths {
	my $entry_in = shift;
	if ($entry_in=~/-L\.\./) {
		return $entry_in;
	}
	my @paths = split("/",$entry_in);
	my @new_paths;
	foreach( @paths ) {
		if( !($_=~/\.\./) ) {
			push @new_paths, $_;
		}
		else {
			pop @new_paths
		}
	}
	return join("/",@new_paths);
}
