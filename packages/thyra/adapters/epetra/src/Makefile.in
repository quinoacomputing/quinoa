# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#               Thyra: Trilinos Solver Framework Core
#                 Copyright (2004) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************
# @HEADER

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside New_Package. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------

#
# There is, at present, no distinction between most of the categories, 
# other than those which start with EXTRA_.  All categories which do not
# start with EXTRA_ are included in all builds.  Categories which start
# with EXTRA_ are included in some builds (typically controlled by 
# --with-xyz or --without-xyz)
#


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = adapters/epetra/src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/tac_arg_check_mpi.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_can_use_package.m4 \
	$(top_srcdir)/config/tac_arg_enable_export-makefiles.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub_check.m4 \
	$(top_srcdir)/config/tac_arg_inform_subpackage_used.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_flags.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_perl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/Thyra_Config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
am__DEPENDENCIES_1 =
libthyraepetra_a_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 =  \
	Thyra_DiagonalEpetraLinearOpWithSolveFactory.$(OBJEXT) \
	Thyra_EpetraLinearOp.$(OBJEXT) \
	Thyra_EpetraOperatorViewExtractorStd.$(OBJEXT) \
	Thyra_EpetraOperatorWrapper.$(OBJEXT) \
	Thyra_EpetraThyraWrappers.$(OBJEXT) \
	Thyra_get_Epetra_Operator.$(OBJEXT)
am_libthyraepetra_a_OBJECTS = $(am__objects_1)
libthyraepetra_a_OBJECTS = $(am_libthyraepetra_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libthyraepetra_a_SOURCES)
DIST_SOURCES = $(libthyraepetra_a_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
HAVE_PERL = @HAVE_PERL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
MPI_TEMP_CXX = @MPI_TEMP_CXX@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_EXE = @PERL_EXE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRILINOS_TEMPLATE_OBJS = @TRILINOS_TEMPLATE_OBJS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SOURCE_H = \
	$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.hpp \
	$(srcdir)/Thyra_EpetraTypes.hpp \
	$(srcdir)/Thyra_EpetraLinearOpBase.hpp \
	$(srcdir)/Thyra_EpetraLinearOp.hpp \
	$(srcdir)/Thyra_EpetraOperatorViewExtractorBase.hpp \
	$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.hpp \
	$(srcdir)/Thyra_EpetraOperatorWrapper.hpp \
	$(srcdir)/Thyra_EpetraThyraWrappers.hpp \
	$(srcdir)/Thyra_get_Epetra_Operator.hpp

SOURCE = \
	$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp \
	$(srcdir)/Thyra_EpetraLinearOp.cpp \
	$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp \
	$(srcdir)/Thyra_EpetraOperatorWrapper.cpp \
	$(srcdir)/Thyra_EpetraThyraWrappers.cpp \
	$(srcdir)/Thyra_get_Epetra_Operator.cpp

@USING_GNUMAKE_FALSE@EXPORT_INCLUDES = $(THYRA_INCLUDES)
@USING_GNUMAKE_TRUE@EXPORT_INCLUDES = $(shell $(PERL_EXE) $(top_srcdir)/config/strip_dup_incl_paths.pl $(THYRA_INCLUDES))
AM_CPPFLAGS = $(EXPORT_INCLUDES)

# --------------------------------------------------------------------
# Epetra Thyra library specifications
# --------------------------------------------------------------------
EPETRA_THYRA_LIB = libthyraepetra.a
EPETRA_THYRA_H = \
	$(top_srcdir)/src/Thyra_ConfigDefs.hpp \
	$(SOURCE_H)

libthyraepetra_a_SOURCES = \
	$(SOURCE)

@USE_ALTERNATE_AR_FALSE@libthyraepetra_a_AR = $(AR) cru

#We need the following to support separate build directories

# --------------------------------------------------------------------
# For using a special archiver
# --------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libthyraepetra_a_AR = $(ALTERNATE_AR)

# --------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# --------------------------------------------------------------------

# I have not been able to find any kind of "or" for Automake
# conditionals. JW
libthyraepetra_a_LIBADD = $(TRILINOS_TEMPLATE_OBJS) $(XTRALDADD)

# --------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# --------------------------------------------------------------------
lib_LIBRARIES = $(EPETRA_THYRA_LIB)

# --------------------------------------------------------------------
# List of all headers to install in $(includedir)
# --------------------------------------------------------------------
include_HEADERS = $(EPETRA_THYRA_H) 

# --------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# --------------------------------------------------------------------
execincludedir = $(exec_prefix)/include

# --------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# --------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  adapters/epetra/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  adapters/epetra/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libthyraepetra.a: $(libthyraepetra_a_OBJECTS) $(libthyraepetra_a_DEPENDENCIES) 
	-rm -f libthyraepetra.a
	$(libthyraepetra_a_AR) libthyraepetra.a $(libthyraepetra_a_OBJECTS) $(libthyraepetra_a_LIBADD)
	$(RANLIB) libthyraepetra.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_EpetraLinearOp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_EpetraOperatorViewExtractorStd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_EpetraOperatorWrapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_EpetraThyraWrappers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thyra_get_Epetra_Operator.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Thyra_DiagonalEpetraLinearOpWithSolveFactory.o: $(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DiagonalEpetraLinearOpWithSolveFactory.o -MD -MP -MF $(DEPDIR)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.Tpo -c -o Thyra_DiagonalEpetraLinearOpWithSolveFactory.o `test -f '$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.Tpo $(DEPDIR)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp' object='Thyra_DiagonalEpetraLinearOpWithSolveFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DiagonalEpetraLinearOpWithSolveFactory.o `test -f '$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp

Thyra_DiagonalEpetraLinearOpWithSolveFactory.obj: $(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_DiagonalEpetraLinearOpWithSolveFactory.obj -MD -MP -MF $(DEPDIR)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.Tpo -c -o Thyra_DiagonalEpetraLinearOpWithSolveFactory.obj `if test -f '$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.Tpo $(DEPDIR)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp' object='Thyra_DiagonalEpetraLinearOpWithSolveFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_DiagonalEpetraLinearOpWithSolveFactory.obj `if test -f '$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_DiagonalEpetraLinearOpWithSolveFactory.cpp'; fi`

Thyra_EpetraLinearOp.o: $(srcdir)/Thyra_EpetraLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraLinearOp.o -MD -MP -MF $(DEPDIR)/Thyra_EpetraLinearOp.Tpo -c -o Thyra_EpetraLinearOp.o `test -f '$(srcdir)/Thyra_EpetraLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraLinearOp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraLinearOp.Tpo $(DEPDIR)/Thyra_EpetraLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraLinearOp.cpp' object='Thyra_EpetraLinearOp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraLinearOp.o `test -f '$(srcdir)/Thyra_EpetraLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraLinearOp.cpp

Thyra_EpetraLinearOp.obj: $(srcdir)/Thyra_EpetraLinearOp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraLinearOp.obj -MD -MP -MF $(DEPDIR)/Thyra_EpetraLinearOp.Tpo -c -o Thyra_EpetraLinearOp.obj `if test -f '$(srcdir)/Thyra_EpetraLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraLinearOp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraLinearOp.Tpo $(DEPDIR)/Thyra_EpetraLinearOp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraLinearOp.cpp' object='Thyra_EpetraLinearOp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraLinearOp.obj `if test -f '$(srcdir)/Thyra_EpetraLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraLinearOp.cpp'; fi`

Thyra_EpetraOperatorViewExtractorStd.o: $(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraOperatorViewExtractorStd.o -MD -MP -MF $(DEPDIR)/Thyra_EpetraOperatorViewExtractorStd.Tpo -c -o Thyra_EpetraOperatorViewExtractorStd.o `test -f '$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraOperatorViewExtractorStd.Tpo $(DEPDIR)/Thyra_EpetraOperatorViewExtractorStd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp' object='Thyra_EpetraOperatorViewExtractorStd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraOperatorViewExtractorStd.o `test -f '$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp

Thyra_EpetraOperatorViewExtractorStd.obj: $(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraOperatorViewExtractorStd.obj -MD -MP -MF $(DEPDIR)/Thyra_EpetraOperatorViewExtractorStd.Tpo -c -o Thyra_EpetraOperatorViewExtractorStd.obj `if test -f '$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraOperatorViewExtractorStd.Tpo $(DEPDIR)/Thyra_EpetraOperatorViewExtractorStd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp' object='Thyra_EpetraOperatorViewExtractorStd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraOperatorViewExtractorStd.obj `if test -f '$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraOperatorViewExtractorStd.cpp'; fi`

Thyra_EpetraOperatorWrapper.o: $(srcdir)/Thyra_EpetraOperatorWrapper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraOperatorWrapper.o -MD -MP -MF $(DEPDIR)/Thyra_EpetraOperatorWrapper.Tpo -c -o Thyra_EpetraOperatorWrapper.o `test -f '$(srcdir)/Thyra_EpetraOperatorWrapper.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraOperatorWrapper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraOperatorWrapper.Tpo $(DEPDIR)/Thyra_EpetraOperatorWrapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraOperatorWrapper.cpp' object='Thyra_EpetraOperatorWrapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraOperatorWrapper.o `test -f '$(srcdir)/Thyra_EpetraOperatorWrapper.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraOperatorWrapper.cpp

Thyra_EpetraOperatorWrapper.obj: $(srcdir)/Thyra_EpetraOperatorWrapper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraOperatorWrapper.obj -MD -MP -MF $(DEPDIR)/Thyra_EpetraOperatorWrapper.Tpo -c -o Thyra_EpetraOperatorWrapper.obj `if test -f '$(srcdir)/Thyra_EpetraOperatorWrapper.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraOperatorWrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraOperatorWrapper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraOperatorWrapper.Tpo $(DEPDIR)/Thyra_EpetraOperatorWrapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraOperatorWrapper.cpp' object='Thyra_EpetraOperatorWrapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraOperatorWrapper.obj `if test -f '$(srcdir)/Thyra_EpetraOperatorWrapper.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraOperatorWrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraOperatorWrapper.cpp'; fi`

Thyra_EpetraThyraWrappers.o: $(srcdir)/Thyra_EpetraThyraWrappers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraThyraWrappers.o -MD -MP -MF $(DEPDIR)/Thyra_EpetraThyraWrappers.Tpo -c -o Thyra_EpetraThyraWrappers.o `test -f '$(srcdir)/Thyra_EpetraThyraWrappers.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraThyraWrappers.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraThyraWrappers.Tpo $(DEPDIR)/Thyra_EpetraThyraWrappers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraThyraWrappers.cpp' object='Thyra_EpetraThyraWrappers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraThyraWrappers.o `test -f '$(srcdir)/Thyra_EpetraThyraWrappers.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_EpetraThyraWrappers.cpp

Thyra_EpetraThyraWrappers.obj: $(srcdir)/Thyra_EpetraThyraWrappers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_EpetraThyraWrappers.obj -MD -MP -MF $(DEPDIR)/Thyra_EpetraThyraWrappers.Tpo -c -o Thyra_EpetraThyraWrappers.obj `if test -f '$(srcdir)/Thyra_EpetraThyraWrappers.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraThyraWrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraThyraWrappers.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_EpetraThyraWrappers.Tpo $(DEPDIR)/Thyra_EpetraThyraWrappers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_EpetraThyraWrappers.cpp' object='Thyra_EpetraThyraWrappers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_EpetraThyraWrappers.obj `if test -f '$(srcdir)/Thyra_EpetraThyraWrappers.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_EpetraThyraWrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_EpetraThyraWrappers.cpp'; fi`

Thyra_get_Epetra_Operator.o: $(srcdir)/Thyra_get_Epetra_Operator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_get_Epetra_Operator.o -MD -MP -MF $(DEPDIR)/Thyra_get_Epetra_Operator.Tpo -c -o Thyra_get_Epetra_Operator.o `test -f '$(srcdir)/Thyra_get_Epetra_Operator.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_get_Epetra_Operator.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_get_Epetra_Operator.Tpo $(DEPDIR)/Thyra_get_Epetra_Operator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_get_Epetra_Operator.cpp' object='Thyra_get_Epetra_Operator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_get_Epetra_Operator.o `test -f '$(srcdir)/Thyra_get_Epetra_Operator.cpp' || echo '$(srcdir)/'`$(srcdir)/Thyra_get_Epetra_Operator.cpp

Thyra_get_Epetra_Operator.obj: $(srcdir)/Thyra_get_Epetra_Operator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thyra_get_Epetra_Operator.obj -MD -MP -MF $(DEPDIR)/Thyra_get_Epetra_Operator.Tpo -c -o Thyra_get_Epetra_Operator.obj `if test -f '$(srcdir)/Thyra_get_Epetra_Operator.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_get_Epetra_Operator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_get_Epetra_Operator.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Thyra_get_Epetra_Operator.Tpo $(DEPDIR)/Thyra_get_Epetra_Operator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Thyra_get_Epetra_Operator.cpp' object='Thyra_get_Epetra_Operator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thyra_get_Epetra_Operator.obj `if test -f '$(srcdir)/Thyra_get_Epetra_Operator.cpp'; then $(CYGPATH_W) '$(srcdir)/Thyra_get_Epetra_Operator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Thyra_get_Epetra_Operator.cpp'; fi`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-libLIBRARIES


# Specify locations of include files within Trilinos

include $(top_builddir)/Makefile.export.thyra
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
