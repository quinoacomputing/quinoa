[io]
XMLheaders = Tpetra__CrsMatrix__decl_8hpp.xml
XMLclass   = classTpetra_1_1CrsMatrix.xml
template   = Xpetra_EpetraCrsMatrix.hpp.tmpl
output     = CrsMatrix/Xpetra_EpetraCrsMatrix.hpp

[header]
skip = Epetra_RowMatrix.hpp;Epetra_CrsMatrixMultiplyOp_decl.hpp

[function]
skip = sumIntoGlobalValues;sumIntoLocalValues;globalAssemble;getNode;getGraph;getIndexBase;getNumEntriesInGlobalRow;hasColMap;isLowerTriangular;isUpperTriangular;isStorageOptimized;getProfileType;isStaticGraph;solve;hasTransposeApply;checkSizes;copyAndPermute;packAndPrepare;unpackAndCombine;optimizeStorage;leftScale;rightScale;localMultiply;localSolve;convert
removeref = getRowMap;getColMap;getDomainMap;getRangeMap;getComm
inCppFile = EpetraCrsMatrix;insertGlobalValues;insertLocalValues;replaceGlobalValues;replaceLocalValues;resumeFill;supportsRowViews;getLocalRowCopy;getGlobalRowView;getLocalRowView;description;describe;doImport;doExport;apply;fillComplete;isFillComplete;isFillActive;getGlobalRowCopy

[inheritance]
parent = : public CrsMatrix<double, int, int>

[member]
name = mtx_

[type]
wrapped = const Map< LocalOrdinal, GlobalOrdinal, Node > &;LookupStatus;LocalGlobal;const RCP< const Map< LocalOrdinal, GlobalOrdinal, Node > > &;ProfileType;const RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node> > &;OptimizeOption;const MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;Vector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node> >;const RCP< const Comm< int > > &

[replace]
removeLocalIndices = RemoveMyEntries
fillComplete = FillComplete
getComm = Comm
getRowMap    = RowMap
getColMap    = ColMap
getDomainMap = DomainMap
getRangeMap  = RangeMap
getGlobalNumRows = NumGlobalRows
getGlobalNumCols = NumGlobalCols
getNodeNumRows = NumMyRows
getNodeNumCols = NumMyCols
getIndexBase = IndexBase
getGlobalNumEntries = NumGlobalNonzeros
getNodeNumEntries = NumMyNonzeros
getNumEntriesInGlobalRow = NumGlobalIndices
getNumEntriesInLocalRow = NumMyEntries
getNumAllocatedEntriesInGlobalRow = NumAllocatedGlobalIndices
getNumAllocatedEntriesInLocalRow = NumAllocatedMyEntries
getGlobalNumDiags = NumGlobalDiagonals
getNodeNumDiags = NumMyDiagonals
getGlobalMaxNumRowEntries = GlobalMaxNumEntries
getNodeMaxNumRowEntries = MaxNumEntries
hasColMap = HaveColMap
insertLocalValues = InsertMyValues
isLowerTriangular = LowerTriangular
isUpperTriangular = UpperTriangular
isLocallyIndexed = IndicesAreLocal
isGloballyIndexed = IndicesAreGlobal
isStorageOptimized = StorageOptimized
getIndexBase = IndexBase
getImporter = Importer
scale = Scale
getCrsGraph = Graph
getLocalDiagCopy = ExtractDiagonalCopy
getFrobeniusNorm = NormFrobenius
setAllToScalar = PutScalar
