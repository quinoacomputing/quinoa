[io]
XMLheaders = Tpetra__Vector__decl_8hpp.xml
XMLclass   = classTpetra_1_1Vector.xml
template   = Xpetra_TpetraVector.hpp.tmpl
output     = Vector/Xpetra_TpetraVector.hpp

[header]
skip = Tpetra_MultiVector_decl.hpp

[function]
skip = Vector;~Vector;putScalar;randomize;replaceMap;reduce;subCopy;subCopy;subView;subView;subViewNonConst;subViewNonConst;offsetView;offsetViewNonConst;getVector;getVectorNonConst;getData;getDataNonConst;get1dCopy;get2dCopy;get1dView;get2dView;get1dViewNonConst;get2dViewNonConst;getLocalMV;abs;reciprocal;scale;update;update;multiply;elementWiseMultiply;getNumVectors;getLocalLength;getGlobalLength;getStride;isConstantStride;dot;normWeighted;clone
removeref =

[inheritance]
parent = : public virtual Vector<Scalar,LocalOrdinal,GlobalOrdinal,Node>, public TpetraMultiVector<Scalar,LocalOrdinal,GlobalOrdinal,Node>

[member]
name = getTpetra_Vector()

[type]
wrapped = const Map< LocalOrdinal, GlobalOrdinal, Node > &;LookupStatus;LocalGlobal;const RCP< const Map< LocalOrdinal, GlobalOrdinal, Node > > &;ProfileType;const RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node> > &;OptimizeOption;const MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;Vector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node> >;const Teuchos::RCP< const Map< LocalOrdinal, GlobalOrdinal, Node > > &;const Vector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &

