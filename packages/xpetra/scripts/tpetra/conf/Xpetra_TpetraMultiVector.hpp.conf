[io]
XMLheaders = Tpetra__MultiVector__decl_8hpp.xml
XMLclass   = classTpetra_1_1MultiVector.xml
template   = Xpetra_TpetraMultiVector.hpp.tmpl
output     = MultiVector/Xpetra_TpetraMultiVector.hpp

[header]
skip =

[function]
skip = replaceMap;operator=;subCopy;subCopy;subView;subView;subViewNonConst;subViewNonConst;offsetView;offsetViewNonConst;getLocalMV;getStride;isConstantStride;randomize;elementWiseMultiply
removeref =

[inheritance]
parent = : public virtual MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node >

[member]
name = vec_

[type]
wrapped = const Map< LocalOrdinal, GlobalOrdinal, Node > &;LookupStatus;LocalGlobal;const RCP< const Map< LocalOrdinal, GlobalOrdinal, Node > > &;ProfileType;const RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node> > &;OptimizeOption;const MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;MultiVector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;Vector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &;RCP< const CrsGraph< LocalOrdinal, GlobalOrdinal, Node> >;const Teuchos::RCP< const Map< LocalOrdinal, GlobalOrdinal, Node > > &;const Vector< Scalar, LocalOrdinal, GlobalOrdinal, Node > &
