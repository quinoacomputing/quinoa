# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#@HEADER
# ***********************************************************************
#
#                           Rythmos Package
#                 Copyright (2006) Sandia Corporation
#
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
#
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
# USA
# Questions? Contact Todd S. Coffey (tscoffe@sandia.gov)
#
# ***********************************************************************
#@HEADER

# The following line helps the test harness recover from build errors.


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/Rythmos_config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_cxx_bool.m4 \
	$(top_srcdir)/config/ac_cxx_have_stl.m4 \
	$(top_srcdir)/config/ac_cxx_mutable.m4 \
	$(top_srcdir)/config/ac_cxx_namespaces.m4 \
	$(top_srcdir)/config/ac_cxx_new_for_scoping.m4 \
	$(top_srcdir)/config/ac_cxx_std_sprintf.m4 \
	$(top_srcdir)/config/tac_arg_check_mpi.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_can_use_package.m4 \
	$(top_srcdir)/config/tac_arg_enable_export-makefiles.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub.m4 \
	$(top_srcdir)/config/tac_arg_inform_subpackage_used.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_flags.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libs.m4 \
	$(top_srcdir)/config/tac_arg_with_perl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = Rythmos_config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(execincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
librythmos_a_DEPENDENCIES =
am__objects_1 = Rythmos_BackwardEulerStepper.$(OBJEXT) \
	Rythmos_CubicSplineInterpolator.$(OBJEXT) \
	Rythmos_DataStore.$(OBJEXT) \
	Rythmos_DefaultIntegrator.$(OBJEXT) \
	Rythmos_ExplicitRKStepper.$(OBJEXT) \
	Rythmos_ForwardEulerStepper.$(OBJEXT) \
	Rythmos_HermiteInterpolator.$(OBJEXT) \
	Rythmos_ImplicitBDFStepper.$(OBJEXT) \
	Rythmos_ImplicitBDFStepperStepControl.$(OBJEXT) \
	Rythmos_ImplicitRKStepper.$(OBJEXT) \
	Rythmos_IntegratorBuilder.$(OBJEXT) \
	Rythmos_InterpolationBuffer.$(OBJEXT) \
	Rythmos_LinearInterpolator.$(OBJEXT) \
	Rythmos_RKButcherTableauBuilder.$(OBJEXT) \
	Rythmos_SimpleIntegrationControlStrategy.$(OBJEXT) \
	Rythmos_StepperBase.$(OBJEXT) Rythmos_StepperHelpers.$(OBJEXT) \
	Rythmos_TimeRange.$(OBJEXT) \
	Rythmos_TimeStepNonlinearSolver.$(OBJEXT) \
	Rythmos_ThetaStepper.$(OBJEXT) Rythmos_Version.$(OBJEXT)
am__objects_2 =
@HAVE_MPI_TRUE@am__objects_3 = $(am__objects_2)
am_librythmos_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_2) $(am__objects_2) $(am__objects_2) \
	$(am__objects_2) $(am__objects_3)
librythmos_a_OBJECTS = $(am_librythmos_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(librythmos_a_SOURCES) $(EXTRA_librythmos_a_SOURCES)
DIST_SOURCES = $(librythmos_a_SOURCES) $(EXTRA_librythmos_a_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
HAVE_PERL = @HAVE_PERL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
MPI_TEMP_CXX = @MPI_TEMP_CXX@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_EXE = @PERL_EXE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside New_Package. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------
CORE_H = \
  $(srcdir)/Rythmos_AdjointModelEvaluator.hpp\
  $(srcdir)/Rythmos_BackwardEulerStepper.hpp\
  $(srcdir)/Rythmos_BackwardEulerStepper_decl.hpp\
  $(srcdir)/Rythmos_BackwardEulerStepper_def.hpp\
  $(srcdir)/Rythmos_BreakPointInformerBase.hpp\
  $(srcdir)/Rythmos_CompositeIntegratorObserver.hpp\
  $(srcdir)/Rythmos_ConfigDefs.h\
	$(srcdir)/Rythmos_CubicSplineInterpolator.hpp\
	$(srcdir)/Rythmos_CubicSplineInterpolator_decl.hpp\
	$(srcdir)/Rythmos_CubicSplineInterpolator_def.hpp\
  $(srcdir)/Rythmos_DataStore.hpp\
  $(srcdir)/Rythmos_DataStore_decl.hpp\
  $(srcdir)/Rythmos_DataStore_def.hpp\
  $(srcdir)/Rythmos_DefaultIntegrator.hpp\
  $(srcdir)/Rythmos_DefaultIntegrator_def.hpp\
  $(srcdir)/Rythmos_DefaultIntegrator_decl.hpp\
	$(srcdir)/Rythmos_DiagonalImplicitRKModelEvaluator.hpp\
	$(srcdir)/Rythmos_ErrorEstimateBase.hpp\
	$(srcdir)/Rythmos_ErrorEstimatorBase.hpp\
  $(srcdir)/Rythmos_ErrWtVecCalcAcceptingStepControlStrategyBase.hpp\
  $(srcdir)/Rythmos_ErrWtVecCalcBase.hpp\
  $(srcdir)/Rythmos_ExplicitInstantiationHelpers.hpp\
  $(srcdir)/Rythmos_ExplicitRKStepper.hpp\
  $(srcdir)/Rythmos_ExplicitRKStepper_decl.hpp\
  $(srcdir)/Rythmos_ExplicitRKStepper_def.hpp\
  $(srcdir)/Rythmos_ExplicitTaylorPolynomialStepper.hpp\
  $(srcdir)/Rythmos_ForwardEulerStepper.hpp\
  $(srcdir)/Rythmos_ForwardEulerStepper_decl.hpp\
  $(srcdir)/Rythmos_ForwardEulerStepper_def.hpp\
  $(srcdir)/Rythmos_ForwardResponseSensitivityComputer.hpp\
  $(srcdir)/Rythmos_ForwardResponseSensitivityComputerObserver.hpp\
  $(srcdir)/Rythmos_ForwardSensitivityIntegratorAsModelEvaluator.hpp\
  $(srcdir)/Rythmos_ForwardSensitivityModelEvaluator.hpp\
  $(srcdir)/Rythmos_ForwardSensitivityStepper.hpp\
  $(srcdir)/Rythmos_HermiteInterpolator.hpp\
  $(srcdir)/Rythmos_HermiteInterpolator_decl.hpp\
  $(srcdir)/Rythmos_HermiteInterpolator_def.hpp\
  $(srcdir)/Rythmos_ImplicitBDFStepper.hpp\
  $(srcdir)/Rythmos_ImplicitBDFStepper_decl.hpp\
  $(srcdir)/Rythmos_ImplicitBDFStepper_def.hpp\
  $(srcdir)/Rythmos_ImplicitBDFStepperErrWtVecCalc.hpp\
  $(srcdir)/Rythmos_ImplicitBDFStepperStepControl.hpp\
  $(srcdir)/Rythmos_ImplicitBDFStepperStepControl_decl.hpp\
  $(srcdir)/Rythmos_ImplicitBDFStepperStepControl_def.hpp\
  $(srcdir)/Rythmos_ImplicitRKModelEvaluator.hpp\
  $(srcdir)/Rythmos_ImplicitRKStepper.hpp\
  $(srcdir)/Rythmos_ImplicitRKStepper_decl.hpp\
  $(srcdir)/Rythmos_ImplicitRKStepper_def.hpp\
  $(srcdir)/Rythmos_IntegrationControlStrategyAcceptingIntegratorBase.hpp\
  $(srcdir)/Rythmos_IntegrationControlStrategyBase.hpp\
  $(srcdir)/Rythmos_IntegrationObserverBase.hpp\
  $(srcdir)/Rythmos_IntegratorBase.hpp\
  $(srcdir)/Rythmos_IntegratorBuilder.hpp\
  $(srcdir)/Rythmos_IntegratorBuilder_decl.hpp\
  $(srcdir)/Rythmos_IntegratorBuilder_def.hpp\
  $(srcdir)/Rythmos_InterpolationBuffer.hpp\
  $(srcdir)/Rythmos_InterpolationBuffer_def.hpp\
  $(srcdir)/Rythmos_InterpolationBuffer_decl.hpp\
  $(srcdir)/Rythmos_InterpolationBufferAppenderAcceptingIntegratorBase.hpp\
  $(srcdir)/Rythmos_InterpolationBufferAppenderBase.hpp\
  $(srcdir)/Rythmos_InterpolationBufferBase.hpp\
  $(srcdir)/Rythmos_InterpolationBufferHelpers.hpp\
  $(srcdir)/Rythmos_InterpolatorAcceptingObjectBase.hpp\
  $(srcdir)/Rythmos_InterpolatorBase.hpp\
  $(srcdir)/Rythmos_InterpolatorBaseHelpers.hpp\
  $(srcdir)/Rythmos_LinearInterpolator.hpp\
  $(srcdir)/Rythmos_LinearInterpolator_decl.hpp\
  $(srcdir)/Rythmos_LinearInterpolator_def.hpp\
  $(srcdir)/Rythmos_PointwiseInterpolationBufferAppender.hpp\
  $(srcdir)/Rythmos_QuadratureBase.hpp\
  $(srcdir)/Rythmos_RKButcherTableau.hpp\
  $(srcdir)/Rythmos_RKButcherTableauBase.hpp\
  $(srcdir)/Rythmos_RKButcherTableauBuilder.hpp\
  $(srcdir)/Rythmos_RKButcherTableauBuilder_decl.hpp\
  $(srcdir)/Rythmos_RKButcherTableauBuilder_def.hpp\
  $(srcdir)/Rythmos_RKButcherTableauHelpers.hpp\
  $(srcdir)/Rythmos_RKButcherTableauAcceptingStepperBase.hpp\
  $(srcdir)/Rythmos_ResponseAndFwdSensPoint.hpp\
  $(srcdir)/Rythmos_SimpleIntegrationControlStrategy.hpp\
  $(srcdir)/Rythmos_SimpleIntegrationControlStrategy_decl.hpp\
  $(srcdir)/Rythmos_SimpleIntegrationControlStrategy_def.hpp\
  $(srcdir)/Rythmos_SingleResidualModelEvaluator.hpp\
  $(srcdir)/Rythmos_SingleResidualModelEvaluatorBase.hpp\
  $(srcdir)/Rythmos_SmartInterpolationBufferAppender.hpp\
  $(srcdir)/Rythmos_SolverAcceptingStepperBase.hpp\
  $(srcdir)/Rythmos_StateAndForwardSensitivityModelEvaluator.hpp\
  $(srcdir)/Rythmos_StepControlInfo.hpp\
  $(srcdir)/Rythmos_StepControlStrategyAcceptingStepperBase.hpp\
  $(srcdir)/Rythmos_StepControlStrategyBase.hpp\
  $(srcdir)/Rythmos_StepperAsModelEvaluator.hpp\
  $(srcdir)/Rythmos_StepperBase.hpp\
  $(srcdir)/Rythmos_StepperBase_decl.hpp\
  $(srcdir)/Rythmos_StepperBase_def.hpp\
  $(srcdir)/Rythmos_StepperBuilder.hpp\
  $(srcdir)/Rythmos_StepperHelpers.hpp\
  $(srcdir)/Rythmos_StepperHelpers_decl.hpp\
  $(srcdir)/Rythmos_StepperHelpers_def.hpp\
  $(srcdir)/Rythmos_StepperSupportTypes.hpp\
  $(srcdir)/Rythmos_StepperValidator.hpp\
  $(srcdir)/Rythmos_ThetaStepper.hpp\
  $(srcdir)/Rythmos_ThetaStepper_decl.hpp\
  $(srcdir)/Rythmos_ThetaStepper_def.hpp\
  $(srcdir)/Rythmos_TimeDiscretizedBackwardEulerModelEvaluator.hpp\
  $(srcdir)/Rythmos_TimeRange.hpp\
  $(srcdir)/Rythmos_TimeRange_decl.hpp\
  $(srcdir)/Rythmos_TimeRange_def.hpp\
  $(srcdir)/Rythmos_TimeStepNonlinearSolver.hpp\
  $(srcdir)/Rythmos_TimeStepNonlinearSolver_decl.hpp\
  $(srcdir)/Rythmos_TimeStepNonlinearSolver_def.hpp\
  $(srcdir)/Rythmos_TrailingInterpolationBufferAcceptingIntegratorBase.hpp\
  $(srcdir)/Rythmos_Types.hpp\
  $(srcdir)/Rythmos_extractStateAndSens.hpp\
  $(srcdir)/Rythmos_Version.h

CORE = \
  $(srcdir)/Rythmos_BackwardEulerStepper.cpp\
	$(srcdir)/Rythmos_CubicSplineInterpolator.cpp\
  $(srcdir)/Rythmos_DataStore.cpp\
  $(srcdir)/Rythmos_DefaultIntegrator.cpp\
  $(srcdir)/Rythmos_ExplicitRKStepper.cpp\
  $(srcdir)/Rythmos_ForwardEulerStepper.cpp\
  $(srcdir)/Rythmos_HermiteInterpolator.cpp\
	$(srcdir)/Rythmos_ImplicitBDFStepper.cpp\
	$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp\
  $(srcdir)/Rythmos_ImplicitRKStepper.cpp\
  $(srcdir)/Rythmos_IntegratorBuilder.cpp\
  $(srcdir)/Rythmos_InterpolationBuffer.cpp\
  $(srcdir)/Rythmos_LinearInterpolator.cpp\
  $(srcdir)/Rythmos_RKButcherTableauBuilder.cpp\
  $(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp\
  $(srcdir)/Rythmos_StepperBase.cpp\
  $(srcdir)/Rythmos_StepperHelpers.cpp\
  $(srcdir)/Rythmos_TimeRange.cpp\
  $(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp\
  $(srcdir)/Rythmos_ThetaStepper.cpp\
  $(srcdir)/Rythmos_Version.cpp

UTIL_H = 
UTIL = 
ENUM_H = 
UNIPROC_H = 
UNIPROC = 
SERIAL_H = 
SERIAL = 
EXTRA_MPI_H = 
EXTRA_MPI = 
@HAVE_MPI_FALSE@MPI_H = 
@HAVE_MPI_TRUE@MPI_H = \
@HAVE_MPI_TRUE@  $(EXTRA_MPI_H)

@HAVE_MPI_FALSE@MPI = 
@HAVE_MPI_TRUE@MPI = \
@HAVE_MPI_TRUE@  $(EXTRA_MPI)

USERBASE_H = 
LANG_WRAPS_H = 
LANG_WRAPS = 
DIST_H = 
DIST = 
COMP_H = 
COMP = 
@USING_GNUMAKE_FALSE@EXPORT_INCLUDES = $(RYTHMOS_INCLUDES)
@USING_GNUMAKE_TRUE@EXPORT_INCLUDES = $(shell $(PERL_EXE) $(top_srcdir)/config/strip_dup_incl_paths.pl $(RYTHMOS_INCLUDES))
AM_CPPFLAGS = $(EXPORT_INCLUDES)

# ------------------------------------------------------------------------
# Rythmos library specifications
# ------------------------------------------------------------------------
RYTHMOS_LIB = librythmos.a
RYTHMOS_H = \
  $(CORE_H) \
  $(UTIL_H) \
  $(ENUM_H) \
  $(UNIPROC_H) \
  $(SERIAL_H) \
  $(USERBASE_H) \
  $(DIST_H) \
  $(COMP_H) \
  $(MPI_H)

librythmos_a_SOURCES = \
  $(CORE) \
  $(UTIL) \
  $(UNIPROC) \
  $(SERIAL) \
  $(DIST) \
  $(COMP) \
  $(MPI)

EXTRA_librythmos_a_SOURCES = \
  $(EXTRA_MPI) \
  $(EXTRA_MPI_H)

@USE_ALTERNATE_AR_FALSE@librythmos_a_AR = $(AR) cru

#We need the following to support separate build directories
#AM_CPPFLAGS=-I$(builddir)/src
# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@librythmos_a_AR = $(ALTERNATE_AR)

# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# ------------------------------------------------------------------------
librythmos_a_LIBADD = $(XTRALDADD)

# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------
lib_LIBRARIES = $(RYTHMOS_LIB)

# ------------------------------------------------------------------------
# List of all headers to install in $(includedir)
# ------------------------------------------------------------------------
include_HEADERS = $(RYTHMOS_H) 

# ------------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# ------------------------------------------------------------------------

# All Trilinos headers are now installed in the same directory
execincludedir = $(includedir)
nodist_execinclude_HEADERS = Rythmos_config.h

# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
all: Rythmos_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

Rythmos_config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/Rythmos_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/Rythmos_config.h
$(srcdir)/Rythmos_config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f Rythmos_config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
librythmos.a: $(librythmos_a_OBJECTS) $(librythmos_a_DEPENDENCIES) 
	-rm -f librythmos.a
	$(librythmos_a_AR) librythmos.a $(librythmos_a_OBJECTS) $(librythmos_a_LIBADD)
	$(RANLIB) librythmos.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_BackwardEulerStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_CubicSplineInterpolator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_DataStore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_DefaultIntegrator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_ExplicitRKStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_ForwardEulerStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_HermiteInterpolator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_ImplicitBDFStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_ImplicitBDFStepperStepControl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_ImplicitRKStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_IntegratorBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_InterpolationBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_LinearInterpolator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_RKButcherTableauBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_SimpleIntegrationControlStrategy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_StepperBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_StepperHelpers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_ThetaStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_TimeRange.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_TimeStepNonlinearSolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rythmos_Version.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Rythmos_BackwardEulerStepper.o: $(srcdir)/Rythmos_BackwardEulerStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_BackwardEulerStepper.o -MD -MP -MF $(DEPDIR)/Rythmos_BackwardEulerStepper.Tpo -c -o Rythmos_BackwardEulerStepper.o `test -f '$(srcdir)/Rythmos_BackwardEulerStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_BackwardEulerStepper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_BackwardEulerStepper.Tpo $(DEPDIR)/Rythmos_BackwardEulerStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_BackwardEulerStepper.cpp' object='Rythmos_BackwardEulerStepper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_BackwardEulerStepper.o `test -f '$(srcdir)/Rythmos_BackwardEulerStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_BackwardEulerStepper.cpp

Rythmos_BackwardEulerStepper.obj: $(srcdir)/Rythmos_BackwardEulerStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_BackwardEulerStepper.obj -MD -MP -MF $(DEPDIR)/Rythmos_BackwardEulerStepper.Tpo -c -o Rythmos_BackwardEulerStepper.obj `if test -f '$(srcdir)/Rythmos_BackwardEulerStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_BackwardEulerStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_BackwardEulerStepper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_BackwardEulerStepper.Tpo $(DEPDIR)/Rythmos_BackwardEulerStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_BackwardEulerStepper.cpp' object='Rythmos_BackwardEulerStepper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_BackwardEulerStepper.obj `if test -f '$(srcdir)/Rythmos_BackwardEulerStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_BackwardEulerStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_BackwardEulerStepper.cpp'; fi`

Rythmos_CubicSplineInterpolator.o: $(srcdir)/Rythmos_CubicSplineInterpolator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_CubicSplineInterpolator.o -MD -MP -MF $(DEPDIR)/Rythmos_CubicSplineInterpolator.Tpo -c -o Rythmos_CubicSplineInterpolator.o `test -f '$(srcdir)/Rythmos_CubicSplineInterpolator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_CubicSplineInterpolator.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_CubicSplineInterpolator.Tpo $(DEPDIR)/Rythmos_CubicSplineInterpolator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_CubicSplineInterpolator.cpp' object='Rythmos_CubicSplineInterpolator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_CubicSplineInterpolator.o `test -f '$(srcdir)/Rythmos_CubicSplineInterpolator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_CubicSplineInterpolator.cpp

Rythmos_CubicSplineInterpolator.obj: $(srcdir)/Rythmos_CubicSplineInterpolator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_CubicSplineInterpolator.obj -MD -MP -MF $(DEPDIR)/Rythmos_CubicSplineInterpolator.Tpo -c -o Rythmos_CubicSplineInterpolator.obj `if test -f '$(srcdir)/Rythmos_CubicSplineInterpolator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_CubicSplineInterpolator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_CubicSplineInterpolator.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_CubicSplineInterpolator.Tpo $(DEPDIR)/Rythmos_CubicSplineInterpolator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_CubicSplineInterpolator.cpp' object='Rythmos_CubicSplineInterpolator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_CubicSplineInterpolator.obj `if test -f '$(srcdir)/Rythmos_CubicSplineInterpolator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_CubicSplineInterpolator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_CubicSplineInterpolator.cpp'; fi`

Rythmos_DataStore.o: $(srcdir)/Rythmos_DataStore.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_DataStore.o -MD -MP -MF $(DEPDIR)/Rythmos_DataStore.Tpo -c -o Rythmos_DataStore.o `test -f '$(srcdir)/Rythmos_DataStore.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_DataStore.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_DataStore.Tpo $(DEPDIR)/Rythmos_DataStore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_DataStore.cpp' object='Rythmos_DataStore.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_DataStore.o `test -f '$(srcdir)/Rythmos_DataStore.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_DataStore.cpp

Rythmos_DataStore.obj: $(srcdir)/Rythmos_DataStore.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_DataStore.obj -MD -MP -MF $(DEPDIR)/Rythmos_DataStore.Tpo -c -o Rythmos_DataStore.obj `if test -f '$(srcdir)/Rythmos_DataStore.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_DataStore.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_DataStore.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_DataStore.Tpo $(DEPDIR)/Rythmos_DataStore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_DataStore.cpp' object='Rythmos_DataStore.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_DataStore.obj `if test -f '$(srcdir)/Rythmos_DataStore.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_DataStore.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_DataStore.cpp'; fi`

Rythmos_DefaultIntegrator.o: $(srcdir)/Rythmos_DefaultIntegrator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_DefaultIntegrator.o -MD -MP -MF $(DEPDIR)/Rythmos_DefaultIntegrator.Tpo -c -o Rythmos_DefaultIntegrator.o `test -f '$(srcdir)/Rythmos_DefaultIntegrator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_DefaultIntegrator.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_DefaultIntegrator.Tpo $(DEPDIR)/Rythmos_DefaultIntegrator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_DefaultIntegrator.cpp' object='Rythmos_DefaultIntegrator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_DefaultIntegrator.o `test -f '$(srcdir)/Rythmos_DefaultIntegrator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_DefaultIntegrator.cpp

Rythmos_DefaultIntegrator.obj: $(srcdir)/Rythmos_DefaultIntegrator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_DefaultIntegrator.obj -MD -MP -MF $(DEPDIR)/Rythmos_DefaultIntegrator.Tpo -c -o Rythmos_DefaultIntegrator.obj `if test -f '$(srcdir)/Rythmos_DefaultIntegrator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_DefaultIntegrator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_DefaultIntegrator.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_DefaultIntegrator.Tpo $(DEPDIR)/Rythmos_DefaultIntegrator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_DefaultIntegrator.cpp' object='Rythmos_DefaultIntegrator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_DefaultIntegrator.obj `if test -f '$(srcdir)/Rythmos_DefaultIntegrator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_DefaultIntegrator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_DefaultIntegrator.cpp'; fi`

Rythmos_ExplicitRKStepper.o: $(srcdir)/Rythmos_ExplicitRKStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ExplicitRKStepper.o -MD -MP -MF $(DEPDIR)/Rythmos_ExplicitRKStepper.Tpo -c -o Rythmos_ExplicitRKStepper.o `test -f '$(srcdir)/Rythmos_ExplicitRKStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ExplicitRKStepper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ExplicitRKStepper.Tpo $(DEPDIR)/Rythmos_ExplicitRKStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ExplicitRKStepper.cpp' object='Rythmos_ExplicitRKStepper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ExplicitRKStepper.o `test -f '$(srcdir)/Rythmos_ExplicitRKStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ExplicitRKStepper.cpp

Rythmos_ExplicitRKStepper.obj: $(srcdir)/Rythmos_ExplicitRKStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ExplicitRKStepper.obj -MD -MP -MF $(DEPDIR)/Rythmos_ExplicitRKStepper.Tpo -c -o Rythmos_ExplicitRKStepper.obj `if test -f '$(srcdir)/Rythmos_ExplicitRKStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ExplicitRKStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ExplicitRKStepper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ExplicitRKStepper.Tpo $(DEPDIR)/Rythmos_ExplicitRKStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ExplicitRKStepper.cpp' object='Rythmos_ExplicitRKStepper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ExplicitRKStepper.obj `if test -f '$(srcdir)/Rythmos_ExplicitRKStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ExplicitRKStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ExplicitRKStepper.cpp'; fi`

Rythmos_ForwardEulerStepper.o: $(srcdir)/Rythmos_ForwardEulerStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ForwardEulerStepper.o -MD -MP -MF $(DEPDIR)/Rythmos_ForwardEulerStepper.Tpo -c -o Rythmos_ForwardEulerStepper.o `test -f '$(srcdir)/Rythmos_ForwardEulerStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ForwardEulerStepper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ForwardEulerStepper.Tpo $(DEPDIR)/Rythmos_ForwardEulerStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ForwardEulerStepper.cpp' object='Rythmos_ForwardEulerStepper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ForwardEulerStepper.o `test -f '$(srcdir)/Rythmos_ForwardEulerStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ForwardEulerStepper.cpp

Rythmos_ForwardEulerStepper.obj: $(srcdir)/Rythmos_ForwardEulerStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ForwardEulerStepper.obj -MD -MP -MF $(DEPDIR)/Rythmos_ForwardEulerStepper.Tpo -c -o Rythmos_ForwardEulerStepper.obj `if test -f '$(srcdir)/Rythmos_ForwardEulerStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ForwardEulerStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ForwardEulerStepper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ForwardEulerStepper.Tpo $(DEPDIR)/Rythmos_ForwardEulerStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ForwardEulerStepper.cpp' object='Rythmos_ForwardEulerStepper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ForwardEulerStepper.obj `if test -f '$(srcdir)/Rythmos_ForwardEulerStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ForwardEulerStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ForwardEulerStepper.cpp'; fi`

Rythmos_HermiteInterpolator.o: $(srcdir)/Rythmos_HermiteInterpolator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_HermiteInterpolator.o -MD -MP -MF $(DEPDIR)/Rythmos_HermiteInterpolator.Tpo -c -o Rythmos_HermiteInterpolator.o `test -f '$(srcdir)/Rythmos_HermiteInterpolator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_HermiteInterpolator.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_HermiteInterpolator.Tpo $(DEPDIR)/Rythmos_HermiteInterpolator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_HermiteInterpolator.cpp' object='Rythmos_HermiteInterpolator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_HermiteInterpolator.o `test -f '$(srcdir)/Rythmos_HermiteInterpolator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_HermiteInterpolator.cpp

Rythmos_HermiteInterpolator.obj: $(srcdir)/Rythmos_HermiteInterpolator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_HermiteInterpolator.obj -MD -MP -MF $(DEPDIR)/Rythmos_HermiteInterpolator.Tpo -c -o Rythmos_HermiteInterpolator.obj `if test -f '$(srcdir)/Rythmos_HermiteInterpolator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_HermiteInterpolator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_HermiteInterpolator.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_HermiteInterpolator.Tpo $(DEPDIR)/Rythmos_HermiteInterpolator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_HermiteInterpolator.cpp' object='Rythmos_HermiteInterpolator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_HermiteInterpolator.obj `if test -f '$(srcdir)/Rythmos_HermiteInterpolator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_HermiteInterpolator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_HermiteInterpolator.cpp'; fi`

Rythmos_ImplicitBDFStepper.o: $(srcdir)/Rythmos_ImplicitBDFStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ImplicitBDFStepper.o -MD -MP -MF $(DEPDIR)/Rythmos_ImplicitBDFStepper.Tpo -c -o Rythmos_ImplicitBDFStepper.o `test -f '$(srcdir)/Rythmos_ImplicitBDFStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ImplicitBDFStepper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ImplicitBDFStepper.Tpo $(DEPDIR)/Rythmos_ImplicitBDFStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ImplicitBDFStepper.cpp' object='Rythmos_ImplicitBDFStepper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ImplicitBDFStepper.o `test -f '$(srcdir)/Rythmos_ImplicitBDFStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ImplicitBDFStepper.cpp

Rythmos_ImplicitBDFStepper.obj: $(srcdir)/Rythmos_ImplicitBDFStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ImplicitBDFStepper.obj -MD -MP -MF $(DEPDIR)/Rythmos_ImplicitBDFStepper.Tpo -c -o Rythmos_ImplicitBDFStepper.obj `if test -f '$(srcdir)/Rythmos_ImplicitBDFStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ImplicitBDFStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ImplicitBDFStepper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ImplicitBDFStepper.Tpo $(DEPDIR)/Rythmos_ImplicitBDFStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ImplicitBDFStepper.cpp' object='Rythmos_ImplicitBDFStepper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ImplicitBDFStepper.obj `if test -f '$(srcdir)/Rythmos_ImplicitBDFStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ImplicitBDFStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ImplicitBDFStepper.cpp'; fi`

Rythmos_ImplicitBDFStepperStepControl.o: $(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ImplicitBDFStepperStepControl.o -MD -MP -MF $(DEPDIR)/Rythmos_ImplicitBDFStepperStepControl.Tpo -c -o Rythmos_ImplicitBDFStepperStepControl.o `test -f '$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ImplicitBDFStepperStepControl.Tpo $(DEPDIR)/Rythmos_ImplicitBDFStepperStepControl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp' object='Rythmos_ImplicitBDFStepperStepControl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ImplicitBDFStepperStepControl.o `test -f '$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp

Rythmos_ImplicitBDFStepperStepControl.obj: $(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ImplicitBDFStepperStepControl.obj -MD -MP -MF $(DEPDIR)/Rythmos_ImplicitBDFStepperStepControl.Tpo -c -o Rythmos_ImplicitBDFStepperStepControl.obj `if test -f '$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ImplicitBDFStepperStepControl.Tpo $(DEPDIR)/Rythmos_ImplicitBDFStepperStepControl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp' object='Rythmos_ImplicitBDFStepperStepControl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ImplicitBDFStepperStepControl.obj `if test -f '$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ImplicitBDFStepperStepControl.cpp'; fi`

Rythmos_ImplicitRKStepper.o: $(srcdir)/Rythmos_ImplicitRKStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ImplicitRKStepper.o -MD -MP -MF $(DEPDIR)/Rythmos_ImplicitRKStepper.Tpo -c -o Rythmos_ImplicitRKStepper.o `test -f '$(srcdir)/Rythmos_ImplicitRKStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ImplicitRKStepper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ImplicitRKStepper.Tpo $(DEPDIR)/Rythmos_ImplicitRKStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ImplicitRKStepper.cpp' object='Rythmos_ImplicitRKStepper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ImplicitRKStepper.o `test -f '$(srcdir)/Rythmos_ImplicitRKStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ImplicitRKStepper.cpp

Rythmos_ImplicitRKStepper.obj: $(srcdir)/Rythmos_ImplicitRKStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ImplicitRKStepper.obj -MD -MP -MF $(DEPDIR)/Rythmos_ImplicitRKStepper.Tpo -c -o Rythmos_ImplicitRKStepper.obj `if test -f '$(srcdir)/Rythmos_ImplicitRKStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ImplicitRKStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ImplicitRKStepper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ImplicitRKStepper.Tpo $(DEPDIR)/Rythmos_ImplicitRKStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ImplicitRKStepper.cpp' object='Rythmos_ImplicitRKStepper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ImplicitRKStepper.obj `if test -f '$(srcdir)/Rythmos_ImplicitRKStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ImplicitRKStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ImplicitRKStepper.cpp'; fi`

Rythmos_IntegratorBuilder.o: $(srcdir)/Rythmos_IntegratorBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_IntegratorBuilder.o -MD -MP -MF $(DEPDIR)/Rythmos_IntegratorBuilder.Tpo -c -o Rythmos_IntegratorBuilder.o `test -f '$(srcdir)/Rythmos_IntegratorBuilder.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_IntegratorBuilder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_IntegratorBuilder.Tpo $(DEPDIR)/Rythmos_IntegratorBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_IntegratorBuilder.cpp' object='Rythmos_IntegratorBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_IntegratorBuilder.o `test -f '$(srcdir)/Rythmos_IntegratorBuilder.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_IntegratorBuilder.cpp

Rythmos_IntegratorBuilder.obj: $(srcdir)/Rythmos_IntegratorBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_IntegratorBuilder.obj -MD -MP -MF $(DEPDIR)/Rythmos_IntegratorBuilder.Tpo -c -o Rythmos_IntegratorBuilder.obj `if test -f '$(srcdir)/Rythmos_IntegratorBuilder.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_IntegratorBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_IntegratorBuilder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_IntegratorBuilder.Tpo $(DEPDIR)/Rythmos_IntegratorBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_IntegratorBuilder.cpp' object='Rythmos_IntegratorBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_IntegratorBuilder.obj `if test -f '$(srcdir)/Rythmos_IntegratorBuilder.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_IntegratorBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_IntegratorBuilder.cpp'; fi`

Rythmos_InterpolationBuffer.o: $(srcdir)/Rythmos_InterpolationBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_InterpolationBuffer.o -MD -MP -MF $(DEPDIR)/Rythmos_InterpolationBuffer.Tpo -c -o Rythmos_InterpolationBuffer.o `test -f '$(srcdir)/Rythmos_InterpolationBuffer.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_InterpolationBuffer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_InterpolationBuffer.Tpo $(DEPDIR)/Rythmos_InterpolationBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_InterpolationBuffer.cpp' object='Rythmos_InterpolationBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_InterpolationBuffer.o `test -f '$(srcdir)/Rythmos_InterpolationBuffer.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_InterpolationBuffer.cpp

Rythmos_InterpolationBuffer.obj: $(srcdir)/Rythmos_InterpolationBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_InterpolationBuffer.obj -MD -MP -MF $(DEPDIR)/Rythmos_InterpolationBuffer.Tpo -c -o Rythmos_InterpolationBuffer.obj `if test -f '$(srcdir)/Rythmos_InterpolationBuffer.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_InterpolationBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_InterpolationBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_InterpolationBuffer.Tpo $(DEPDIR)/Rythmos_InterpolationBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_InterpolationBuffer.cpp' object='Rythmos_InterpolationBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_InterpolationBuffer.obj `if test -f '$(srcdir)/Rythmos_InterpolationBuffer.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_InterpolationBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_InterpolationBuffer.cpp'; fi`

Rythmos_LinearInterpolator.o: $(srcdir)/Rythmos_LinearInterpolator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_LinearInterpolator.o -MD -MP -MF $(DEPDIR)/Rythmos_LinearInterpolator.Tpo -c -o Rythmos_LinearInterpolator.o `test -f '$(srcdir)/Rythmos_LinearInterpolator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_LinearInterpolator.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_LinearInterpolator.Tpo $(DEPDIR)/Rythmos_LinearInterpolator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_LinearInterpolator.cpp' object='Rythmos_LinearInterpolator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_LinearInterpolator.o `test -f '$(srcdir)/Rythmos_LinearInterpolator.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_LinearInterpolator.cpp

Rythmos_LinearInterpolator.obj: $(srcdir)/Rythmos_LinearInterpolator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_LinearInterpolator.obj -MD -MP -MF $(DEPDIR)/Rythmos_LinearInterpolator.Tpo -c -o Rythmos_LinearInterpolator.obj `if test -f '$(srcdir)/Rythmos_LinearInterpolator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_LinearInterpolator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_LinearInterpolator.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_LinearInterpolator.Tpo $(DEPDIR)/Rythmos_LinearInterpolator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_LinearInterpolator.cpp' object='Rythmos_LinearInterpolator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_LinearInterpolator.obj `if test -f '$(srcdir)/Rythmos_LinearInterpolator.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_LinearInterpolator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_LinearInterpolator.cpp'; fi`

Rythmos_RKButcherTableauBuilder.o: $(srcdir)/Rythmos_RKButcherTableauBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_RKButcherTableauBuilder.o -MD -MP -MF $(DEPDIR)/Rythmos_RKButcherTableauBuilder.Tpo -c -o Rythmos_RKButcherTableauBuilder.o `test -f '$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_RKButcherTableauBuilder.Tpo $(DEPDIR)/Rythmos_RKButcherTableauBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp' object='Rythmos_RKButcherTableauBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_RKButcherTableauBuilder.o `test -f '$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp

Rythmos_RKButcherTableauBuilder.obj: $(srcdir)/Rythmos_RKButcherTableauBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_RKButcherTableauBuilder.obj -MD -MP -MF $(DEPDIR)/Rythmos_RKButcherTableauBuilder.Tpo -c -o Rythmos_RKButcherTableauBuilder.obj `if test -f '$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_RKButcherTableauBuilder.Tpo $(DEPDIR)/Rythmos_RKButcherTableauBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp' object='Rythmos_RKButcherTableauBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_RKButcherTableauBuilder.obj `if test -f '$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_RKButcherTableauBuilder.cpp'; fi`

Rythmos_SimpleIntegrationControlStrategy.o: $(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_SimpleIntegrationControlStrategy.o -MD -MP -MF $(DEPDIR)/Rythmos_SimpleIntegrationControlStrategy.Tpo -c -o Rythmos_SimpleIntegrationControlStrategy.o `test -f '$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_SimpleIntegrationControlStrategy.Tpo $(DEPDIR)/Rythmos_SimpleIntegrationControlStrategy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp' object='Rythmos_SimpleIntegrationControlStrategy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_SimpleIntegrationControlStrategy.o `test -f '$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp

Rythmos_SimpleIntegrationControlStrategy.obj: $(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_SimpleIntegrationControlStrategy.obj -MD -MP -MF $(DEPDIR)/Rythmos_SimpleIntegrationControlStrategy.Tpo -c -o Rythmos_SimpleIntegrationControlStrategy.obj `if test -f '$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_SimpleIntegrationControlStrategy.Tpo $(DEPDIR)/Rythmos_SimpleIntegrationControlStrategy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp' object='Rythmos_SimpleIntegrationControlStrategy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_SimpleIntegrationControlStrategy.obj `if test -f '$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_SimpleIntegrationControlStrategy.cpp'; fi`

Rythmos_StepperBase.o: $(srcdir)/Rythmos_StepperBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_StepperBase.o -MD -MP -MF $(DEPDIR)/Rythmos_StepperBase.Tpo -c -o Rythmos_StepperBase.o `test -f '$(srcdir)/Rythmos_StepperBase.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_StepperBase.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_StepperBase.Tpo $(DEPDIR)/Rythmos_StepperBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_StepperBase.cpp' object='Rythmos_StepperBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_StepperBase.o `test -f '$(srcdir)/Rythmos_StepperBase.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_StepperBase.cpp

Rythmos_StepperBase.obj: $(srcdir)/Rythmos_StepperBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_StepperBase.obj -MD -MP -MF $(DEPDIR)/Rythmos_StepperBase.Tpo -c -o Rythmos_StepperBase.obj `if test -f '$(srcdir)/Rythmos_StepperBase.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_StepperBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_StepperBase.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_StepperBase.Tpo $(DEPDIR)/Rythmos_StepperBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_StepperBase.cpp' object='Rythmos_StepperBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_StepperBase.obj `if test -f '$(srcdir)/Rythmos_StepperBase.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_StepperBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_StepperBase.cpp'; fi`

Rythmos_StepperHelpers.o: $(srcdir)/Rythmos_StepperHelpers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_StepperHelpers.o -MD -MP -MF $(DEPDIR)/Rythmos_StepperHelpers.Tpo -c -o Rythmos_StepperHelpers.o `test -f '$(srcdir)/Rythmos_StepperHelpers.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_StepperHelpers.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_StepperHelpers.Tpo $(DEPDIR)/Rythmos_StepperHelpers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_StepperHelpers.cpp' object='Rythmos_StepperHelpers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_StepperHelpers.o `test -f '$(srcdir)/Rythmos_StepperHelpers.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_StepperHelpers.cpp

Rythmos_StepperHelpers.obj: $(srcdir)/Rythmos_StepperHelpers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_StepperHelpers.obj -MD -MP -MF $(DEPDIR)/Rythmos_StepperHelpers.Tpo -c -o Rythmos_StepperHelpers.obj `if test -f '$(srcdir)/Rythmos_StepperHelpers.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_StepperHelpers.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_StepperHelpers.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_StepperHelpers.Tpo $(DEPDIR)/Rythmos_StepperHelpers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_StepperHelpers.cpp' object='Rythmos_StepperHelpers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_StepperHelpers.obj `if test -f '$(srcdir)/Rythmos_StepperHelpers.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_StepperHelpers.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_StepperHelpers.cpp'; fi`

Rythmos_TimeRange.o: $(srcdir)/Rythmos_TimeRange.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_TimeRange.o -MD -MP -MF $(DEPDIR)/Rythmos_TimeRange.Tpo -c -o Rythmos_TimeRange.o `test -f '$(srcdir)/Rythmos_TimeRange.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_TimeRange.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_TimeRange.Tpo $(DEPDIR)/Rythmos_TimeRange.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_TimeRange.cpp' object='Rythmos_TimeRange.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_TimeRange.o `test -f '$(srcdir)/Rythmos_TimeRange.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_TimeRange.cpp

Rythmos_TimeRange.obj: $(srcdir)/Rythmos_TimeRange.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_TimeRange.obj -MD -MP -MF $(DEPDIR)/Rythmos_TimeRange.Tpo -c -o Rythmos_TimeRange.obj `if test -f '$(srcdir)/Rythmos_TimeRange.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_TimeRange.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_TimeRange.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_TimeRange.Tpo $(DEPDIR)/Rythmos_TimeRange.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_TimeRange.cpp' object='Rythmos_TimeRange.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_TimeRange.obj `if test -f '$(srcdir)/Rythmos_TimeRange.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_TimeRange.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_TimeRange.cpp'; fi`

Rythmos_TimeStepNonlinearSolver.o: $(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_TimeStepNonlinearSolver.o -MD -MP -MF $(DEPDIR)/Rythmos_TimeStepNonlinearSolver.Tpo -c -o Rythmos_TimeStepNonlinearSolver.o `test -f '$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_TimeStepNonlinearSolver.Tpo $(DEPDIR)/Rythmos_TimeStepNonlinearSolver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp' object='Rythmos_TimeStepNonlinearSolver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_TimeStepNonlinearSolver.o `test -f '$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp

Rythmos_TimeStepNonlinearSolver.obj: $(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_TimeStepNonlinearSolver.obj -MD -MP -MF $(DEPDIR)/Rythmos_TimeStepNonlinearSolver.Tpo -c -o Rythmos_TimeStepNonlinearSolver.obj `if test -f '$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_TimeStepNonlinearSolver.Tpo $(DEPDIR)/Rythmos_TimeStepNonlinearSolver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp' object='Rythmos_TimeStepNonlinearSolver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_TimeStepNonlinearSolver.obj `if test -f '$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_TimeStepNonlinearSolver.cpp'; fi`

Rythmos_ThetaStepper.o: $(srcdir)/Rythmos_ThetaStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ThetaStepper.o -MD -MP -MF $(DEPDIR)/Rythmos_ThetaStepper.Tpo -c -o Rythmos_ThetaStepper.o `test -f '$(srcdir)/Rythmos_ThetaStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ThetaStepper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ThetaStepper.Tpo $(DEPDIR)/Rythmos_ThetaStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ThetaStepper.cpp' object='Rythmos_ThetaStepper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ThetaStepper.o `test -f '$(srcdir)/Rythmos_ThetaStepper.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_ThetaStepper.cpp

Rythmos_ThetaStepper.obj: $(srcdir)/Rythmos_ThetaStepper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_ThetaStepper.obj -MD -MP -MF $(DEPDIR)/Rythmos_ThetaStepper.Tpo -c -o Rythmos_ThetaStepper.obj `if test -f '$(srcdir)/Rythmos_ThetaStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ThetaStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ThetaStepper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_ThetaStepper.Tpo $(DEPDIR)/Rythmos_ThetaStepper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_ThetaStepper.cpp' object='Rythmos_ThetaStepper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_ThetaStepper.obj `if test -f '$(srcdir)/Rythmos_ThetaStepper.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_ThetaStepper.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_ThetaStepper.cpp'; fi`

Rythmos_Version.o: $(srcdir)/Rythmos_Version.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_Version.o -MD -MP -MF $(DEPDIR)/Rythmos_Version.Tpo -c -o Rythmos_Version.o `test -f '$(srcdir)/Rythmos_Version.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_Version.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_Version.Tpo $(DEPDIR)/Rythmos_Version.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_Version.cpp' object='Rythmos_Version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_Version.o `test -f '$(srcdir)/Rythmos_Version.cpp' || echo '$(srcdir)/'`$(srcdir)/Rythmos_Version.cpp

Rythmos_Version.obj: $(srcdir)/Rythmos_Version.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rythmos_Version.obj -MD -MP -MF $(DEPDIR)/Rythmos_Version.Tpo -c -o Rythmos_Version.obj `if test -f '$(srcdir)/Rythmos_Version.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_Version.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_Version.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Rythmos_Version.Tpo $(DEPDIR)/Rythmos_Version.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Rythmos_Version.cpp' object='Rythmos_Version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rythmos_Version.obj `if test -f '$(srcdir)/Rythmos_Version.cpp'; then $(CYGPATH_W) '$(srcdir)/Rythmos_Version.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Rythmos_Version.cpp'; fi`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(execincludedir)" || $(MKDIR_P) "$(DESTDIR)$(execincludedir)"
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_execincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(execincludedir)/$$f'"; \
	  $(nodist_execincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(execincludedir)/$$f"; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(execincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(execincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) Rythmos_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Rythmos_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) Rythmos_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Rythmos_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS) Rythmos_config.h all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(execincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES \
	install-nodist_execincludeHEADERS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-nodist_execincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLIBRARIES install-man \
	install-nodist_execincludeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-nodist_execincludeHEADERS


all-local:
	@echo ""
	@echo "Trilinos package rythmos subdirectory src built successfully."
	@echo ""

#Specify locations of include files within Trilinos

include $(top_builddir)/Makefile.export.rythmos
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
