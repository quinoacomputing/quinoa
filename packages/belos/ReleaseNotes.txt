----------------------------------------
Release Notes for Trilinos Package Belos
----------------------------------------

Dev version:
-------------

* MINRES: "Num Blocks" parameter now allowed for compatibility with
  other Belos solvers (10 Apr 2014)
    
Many Belos solvers based on GMRES have a "Num Blocks" parameter.  This
gives the restart length.  (The name refers to the amount of vector
storage, as a multiple of the solver's block size, but it really means
"restart length.")  Thus, a reasonable default ParameterList for Belos
may have the "Num Blocks" parameter in it.  However, MINRES did not
accept this parameter, and threw an exception if given it.  This makes
sense, because its MINRES does not restart.  However, it causes
trouble for users who might want to reuse a ParameterList for
different Belos solvers.  We changed MINRES so that it accepts, but
ignores, the "Num Blocks" parameter.

Trilinos 11.8
-------------

* More Belos solvers now work with complex Scalar type; more now
  compile for complex Scalar type

This includes GCRODR, LSQR, RCG, and BlockGCRODR.  Not all of these
solvers are enabled by default; some are still marked "experimental."

Trilinos 10.6:
--------------

(*) Minor changes in Belos/Tpetra adaptors.

Trilinos 10.4:
--------------

(*) Replaced non-const MultiVecTraits::CloneView(MV) with explicit MultiVecTraits::CloneViewNonConst(MV).

This is a non-backwards-compatible change to Belos::MultiVecTraits, requiring changes through Belos solver, solver managers, and orthomanagers. 
The result is that it is much harder to accidentally create a non-const view when a const view is sufficient. To do so requires CloneViewNonConst() be called
explicitly, all such calls being manually invoked during this refactorization.

