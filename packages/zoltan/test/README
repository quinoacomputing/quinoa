# @HEADER
#
########################################################################
#
#  Zoltan Toolkit for Load-balancing, Partitioning, Ordering and Coloring
#                  Copyright 2012 Sandia Corporation
#
# Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
# the U.S. Government retains certain rights in this software.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the Corporation nor the names of the
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Questions? Contact Karen Devine	kddevin@sandia.gov
#                    Erik Boman	        egboman@sandia.gov
#
########################################################################
#
# @HEADER
The test directory contains a series of tests used for regression testing.
Each test is in its own directory.  Within each directory, 
  - file README gives a brief description of the particular test.
  - files "zdrive.inp.*" are input files for the zdrive or zfdrive test drivers.
  - subdirectory "answers" contains the accepted solutions for the test.

Test directories ch_* use Chaco-format input files.  These tests may be run
on any number of processors; regression test results are for a specified number
of processors.

Test directories nem_* use Nemesis-format input files.  Running these tests
on arbitrary numbers of processors requires generation of Nemesis parallel
input files; instructions for generating these files are included in the
nem_*/README files.  However, since generating these files is non-trivial, 
it is easiest to run these problems on the specified number of processors.

The script, test_zoltan, in this directory, runs the entire regression test
suite.  See descriptions of test_zoltan in the Zoltan developer's guide.

Test input files zdrive.inp.* have a suffix indicating the particular
partitioning method and parameters used for the test problem.  A summary of
the suffixes is included below:
  - rcb:               RCB method
  - rcb-ts:            RCB method with TFLOPS_SPECIAL parameter.
  - rib:               RIB method
  - rib-ts:            RIB method with TFLOPS_SPECIAL parameter.
  - oct[0,1,2]:        OCTPART method with OCT_METHOD parameter = [0,1,2]
  - partkway:          ParMETIS PartKWay method
  - partgeom:          ParMETIS PartGeom method
  - diffusion:         ParMETIS Diffusion method
  - jostle:            Jostle partitioning method
  - jostle-diffusion:  Jostle partitioning method with jostle_reduction=off
  - *-oneproc:         Initial distribution on only one processor.
  - *-cyclic:          Cyclic initial distribution.
  

-------------------------------------------------------------------------
Notes:

2/26/03 KDD
Adaptive-repart method in ParMETIS may give different answers on different
platforms due to differences in qsort between platforms.  On Suns (with
dynamic linking), different versions of the C library may have different
implementations, resulting in different results even across multiple Suns.
(qsort in ParMETIS3.0's SerialRemap function does not have deterministic 
comparison function, so items to be sorted that are equal may be output in 
different order on different platforms; i.e., ties are broken differently.)

