// *****************************************************************************
/*!
  \file      src/IO/particlewriter.ci
  \author    J. Bakosi
  \copyright 2012-2015, Jozsef Bakosi, 2016, Los Alamos National Security, LLC.
  \brief     Charm++ module interface file for outputing particle data to file
  \details   Charm++ module interface file for outputing particle data to file.
*/
// *****************************************************************************

module particlewriter {

  namespace tk {

    // List all possible specializations of templated chare to instantiate
    // registration and delivery of code for the individual specializations

    // Will specialize particle writer for Transporter
    chare ParticleWriter< inciter::CProxy_Transporter >;

    // ParticleWriter is templated so that the same code (parameterized by the
    // type given by the template argument, HostProxy) can be generated for
    // different types of proxies. Howver, all possible specializations must be
    // listed above to ensure that Charm++ generates correct code.
    template< class HostProxy >
    group ParticleWriter {
      entry ParticleWriter( const HostProxy& host,
                            const std::string& filename );
    };

  } // tk::

}
