// *****************************************************************************
/*!
  \file      src/Main/walker.ci
  \copyright 2012-2015, J. Bakosi, 2016-2018, Los Alamos National Security, LLC.
  \brief     Charm++ module interface file for walker
  \details   Charm++ module interface file for random walker, walker.
  \see http://charm.cs.illinois.edu/manuals/html/charm++/manual.html
*/
// *****************************************************************************

mainmodule walker {

  extern module integrator;
  extern module charestatecollector;

  readonly CProxy_Main mainProxy;
  readonly tk::CProxy_ChareStateCollector stateProxy;

  namespace walker {

    // Order important: must be the same as in Main/Walker.C
    // Also: inputdeck stores parsed data, rngs instantiated based on
    // user-defined parameters from input deck, diffeqs initialized using rngs
    readonly ctr::InputDeck g_inputdeck_defaults;
    readonly ctr::InputDeck g_inputdeck;
    readonly std::map< tk::ctr::RawRNGType, tk::RNG > g_rng;
    readonly std::vector< DiffEq > g_diffeqs;

  } // walker::

  mainchare Main {
    entry Main( CkArgMsg* msg );
    entry void execute();
    entry void finalize();
    entry void timestamp( std::string label, tk::real stamp );
    entry void quiescence();
    entry [reductiontarget] void dumpstate( CkReductionMsg* msg );
  }

  chare execute { entry execute(); }
}
