// *****************************************************************************
/*!
  \file      src/Inciter/partitioner.ci
  \copyright 2012-2015, J. Bakosi, 2016-2018, Los Alamos National Security, LLC.
  \brief     Charm++ module interface file for the chare partitioner group
  \details   Charm++ module interface file for the chare partitioner group used
             to perform mesh partitioning.
*/
// *****************************************************************************

module partitioner {

  include "Types.h";
  include "UnsMesh.h";
  include "Scheme.h";
  include "FaceData.h";
  include "Callback.h";

  extern module transporter;
  extern module refiner;

  namespace inciter {

    group Partitioner {
      entry Partitioner(
        const tk::PartitionerCallback& cbp,
        const tk::RefinerCallback& cbr,
        const tk::SorterCallback& cbs,
        const CProxy_Transporter& host,
        const tk::CProxy_Solver& solver,
        const CProxy_Refiner& refiner,
        const CProxy_Sorter& sorter,
        const Scheme& scheme,
        const std::map< int, std::vector< std::size_t > >& belem,
        const std::map< int, std::vector< std::size_t > >& faces,
        const std::map< int, std::vector< std::size_t > >& bnode );
      entry void partition( int nchare );
      entry void addMesh( int frompe,
                          const std::unordered_map< int,
                                  std::tuple< std::vector< std::size_t >,
                                    tk::UnsMesh::CoordMap > >& chmesh );
      entry void recvMesh();
      entry void refine();
    };

  } // inciter::
}
